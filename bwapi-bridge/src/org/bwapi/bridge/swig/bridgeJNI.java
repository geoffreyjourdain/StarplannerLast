/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.bwapi.bridge.swig;

class bridgeJNI {
  public final static native void BWAPI_init();
  public final static native long new_AIModule();
  public final static native void delete_AIModule(long jarg1);
  public final static native void AIModule_onStart(long jarg1, AIModule jarg1_);
  public final static native void AIModule_onEnd(long jarg1, AIModule jarg1_, boolean jarg2);
  public final static native void AIModule_onFrame(long jarg1, AIModule jarg1_);
  public final static native boolean AIModule_onSendText(long jarg1, AIModule jarg1_, String jarg2);
  public final static native void AIModule_onPlayerLeft(long jarg1, AIModule jarg1_, long jarg2, SWIG_Player jarg2_);
  public final static native void AIModule_onNukeDetect(long jarg1, AIModule jarg1_, long jarg2);
  public final static native void AIModule_onUnitCreate(long jarg1, AIModule jarg1_, long jarg2, SWIG_Unit jarg2_);
  public final static native void AIModule_onUnitDestroy(long jarg1, AIModule jarg1_, long jarg2, SWIG_Unit jarg2_);
  public final static native void AIModule_onUnitMorph(long jarg1, AIModule jarg1_, long jarg2, SWIG_Unit jarg2_);
  public final static native void AIModule_onUnitShow(long jarg1, AIModule jarg1_, long jarg2, SWIG_Unit jarg2_);
  public final static native void AIModule_onUnitHide(long jarg1, AIModule jarg1_, long jarg2, SWIG_Unit jarg2_);
  public final static native void AIModule_onUnitRenegade(long jarg1, AIModule jarg1_, long jarg2, SWIG_Unit jarg2_);
  public final static native long new_SWIG_AttackType__SWIG_0();
  public final static native long new_SWIG_AttackType__SWIG_1(int jarg1);
  public final static native long new_SWIG_AttackType__SWIG_2(long jarg1, SWIG_AttackType jarg1_);
  public final static native long SWIG_AttackType_opAssign(long jarg1, SWIG_AttackType jarg1_, long jarg2, SWIG_AttackType jarg2_);
  public final static native boolean SWIG_AttackType_opEquals(long jarg1, SWIG_AttackType jarg1_, long jarg2, SWIG_AttackType jarg2_);
  public final static native boolean SWIG_AttackType_opNotEquals(long jarg1, SWIG_AttackType jarg1_, long jarg2, SWIG_AttackType jarg2_);
  public final static native boolean SWIG_AttackType_opLessThan(long jarg1, SWIG_AttackType jarg1_, long jarg2, SWIG_AttackType jarg2_);
  public final static native int SWIG_AttackType_getID(long jarg1, SWIG_AttackType jarg1_);
  public final static native String SWIG_AttackType_getName(long jarg1, SWIG_AttackType jarg1_);
  public final static native void delete_SWIG_AttackType(long jarg1);
  public final static native long getAttackType(long jarg1);
  public final static native long allAttackTypes();
  public final static native void initAttackTypes();
  public final static native long Melee_get();
  public final static native long Fusion_Cutter_Hit_get();
  public final static native long Gauss_Rifle_Hit_get();
  public final static native long C_10_Canister_Rifle_Hit_get();
  public final static native long AttackTypeGemeni_Missiles_get();
  public final static native long AttackTypeFragmentation_Grenade_get();
  public final static native long AttackTypeLongbolt_Missile_get();
  public final static native long ATS_ATA_Laser_Battery_get();
  public final static native long AttackTypeBurst_Lasers_get();
  public final static native long Arclite_Shock_Cannon_Hit_get();
  public final static native long EMP_Missile_get();
  public final static native long Dual_Photon_Blasters_Hit_get();
  public final static native long Particle_Beam_Hit_get();
  public final static native long Anti_Matter_Missile_get();
  public final static native long AttackTypePulse_Cannon_get();
  public final static native long Psionic_Shockwave_Hit_get();
  public final static native long Psionic_Storm_get();
  public final static native long AttackTypeYamato_Gun_get();
  public final static native long AttackTypePhase_Disruptor_get();
  public final static native long STA_STS_Cannon_Overlay_get();
  public final static native long Sunken_Colony_Tentacle_get();
  public final static native long AttackTypeAcid_Spore_get();
  public final static native long AttackTypeGlave_Wurm_get();
  public final static native long AttackTypeSeeker_Spores_get();
  public final static native long Queen_Spell_Carrier_get();
  public final static native long Plague_Cloud_get();
  public final static native long Consume_get();
  public final static native long Needle_Spine_Hit_get();
  public final static native long Invisible_get();
  public final static native long Optical_Flare_Grenade_get();
  public final static native long AttackTypeHalo_Rockets_get();
  public final static native long AttackTypeSubterranean_Spines_get();
  public final static native long Corrosive_Acid_Shot_get();
  public final static native long Neutron_Flare_get();
  public final static native long AttackTypeNone_get();
  public final static native long AttackTypeUnknown_get();
  public final static native long new_SWIG_Color__SWIG_0();
  public final static native long new_SWIG_Color__SWIG_1(int jarg1);
  public final static native long new_SWIG_Color__SWIG_2(long jarg1, SWIG_Color jarg1_);
  public final static native long new_SWIG_Color__SWIG_3(int jarg1, int jarg2, int jarg3);
  public final static native long SWIG_Color_opAssign(long jarg1, SWIG_Color jarg1_, long jarg2, SWIG_Color jarg2_);
  public final static native boolean SWIG_Color_opEquals(long jarg1, SWIG_Color jarg1_, long jarg2, SWIG_Color jarg2_);
  public final static native boolean SWIG_Color_opNotEquals(long jarg1, SWIG_Color jarg1_, long jarg2, SWIG_Color jarg2_);
  public final static native boolean SWIG_Color_opLessThan(long jarg1, SWIG_Color jarg1_, long jarg2, SWIG_Color jarg2_);
  public final static native int SWIG_Color_getID(long jarg1, SWIG_Color jarg1_);
  public final static native int SWIG_Color_red(long jarg1, SWIG_Color jarg1_);
  public final static native int SWIG_Color_green(long jarg1, SWIG_Color jarg1_);
  public final static native int SWIG_Color_blue(long jarg1, SWIG_Color jarg1_);
  public final static native void delete_SWIG_Color(long jarg1);
  public final static native void initColors();
  public final static native long Red_get();
  public final static native long Green_get();
  public final static native long Blue_get();
  public final static native long Yellow_get();
  public final static native long Cyan_get();
  public final static native long Purple_get();
  public final static native long Orange_get();
  public final static native long Black_get();
  public final static native long White_get();
  public final static native long Grey_get();
  public final static native int TILE_SIZE_get();
  public final static native int PYLON_X_RADIUS_get();
  public final static native int PYLON_Y_RADIUS_get();
  public final static native long new_SWIG_DamageType__SWIG_0();
  public final static native long new_SWIG_DamageType__SWIG_1(int jarg1);
  public final static native long new_SWIG_DamageType__SWIG_2(long jarg1, SWIG_DamageType jarg1_);
  public final static native long SWIG_DamageType_opAssign(long jarg1, SWIG_DamageType jarg1_, long jarg2, SWIG_DamageType jarg2_);
  public final static native boolean SWIG_DamageType_opEquals(long jarg1, SWIG_DamageType jarg1_, long jarg2, SWIG_DamageType jarg2_);
  public final static native boolean SWIG_DamageType_opNotEquals(long jarg1, SWIG_DamageType jarg1_, long jarg2, SWIG_DamageType jarg2_);
  public final static native boolean SWIG_DamageType_opLessThan(long jarg1, SWIG_DamageType jarg1_, long jarg2, SWIG_DamageType jarg2_);
  public final static native int SWIG_DamageType_getID(long jarg1, SWIG_DamageType jarg1_);
  public final static native String SWIG_DamageType_getName(long jarg1, SWIG_DamageType jarg1_);
  public final static native void delete_SWIG_DamageType(long jarg1);
  public final static native long getDamageType(long jarg1);
  public final static native long allDamageTypes();
  public final static native void initDamageTypes();
  public final static native long DamageTypeIndependent_get();
  public final static native long Explosive_get();
  public final static native long Concussive_get();
  public final static native long DamageTypeNormal_get();
  public final static native long Ignore_Armor_get();
  public final static native long DamageTypeNone_get();
  public final static native long DamageTypeUnknown_get();
  public final static native long new_SWIG_Error__SWIG_0();
  public final static native long new_SWIG_Error__SWIG_1(int jarg1);
  public final static native long new_SWIG_Error__SWIG_2(long jarg1, SWIG_Error jarg1_);
  public final static native long SWIG_Error_opAssign(long jarg1, SWIG_Error jarg1_, long jarg2, SWIG_Error jarg2_);
  public final static native boolean SWIG_Error_opEquals(long jarg1, SWIG_Error jarg1_, long jarg2, SWIG_Error jarg2_);
  public final static native boolean SWIG_Error_opNotEquals(long jarg1, SWIG_Error jarg1_, long jarg2, SWIG_Error jarg2_);
  public final static native boolean SWIG_Error_opLessThan(long jarg1, SWIG_Error jarg1_, long jarg2, SWIG_Error jarg2_);
  public final static native int SWIG_Error_getID(long jarg1, SWIG_Error jarg1_);
  public final static native String SWIG_Error_toErrorString(long jarg1, SWIG_Error jarg1_);
  public final static native void delete_SWIG_Error(long jarg1);
  public final static native long getError(long jarg1);
  public final static native long allErrors();
  public final static native void initErrors();
  public final static native long Unit_Does_Not_Exist_get();
  public final static native long Unit_Not_Visible_get();
  public final static native long Unit_Not_Owned_get();
  public final static native long Unit_Busy_get();
  public final static native long Incompatible_UnitType_get();
  public final static native long Incompatible_TechType_get();
  public final static native long Already_Researched_get();
  public final static native long Fully_Upgraded_get();
  public final static native long Insufficient_Minerals_get();
  public final static native long Insufficient_Gas_get();
  public final static native long Insufficient_Supply_get();
  public final static native long Insufficient_Energy_get();
  public final static native long Insufficient_Tech_get();
  public final static native long Insufficient_Ammo_get();
  public final static native long Insufficient_Space_get();
  public final static native long Unbuildable_Location_get();
  public final static native long Out_Of_Range_get();
  public final static native long Unable_To_Hit_get();
  public final static native long Access_Denied_get();
  public final static native long ErrorNone_get();
  public final static native long ErrorUnknown_get();
  public final static native long new_SWIG_ExplosionType__SWIG_0();
  public final static native long new_SWIG_ExplosionType__SWIG_1(int jarg1);
  public final static native long new_SWIG_ExplosionType__SWIG_2(long jarg1, SWIG_ExplosionType jarg1_);
  public final static native long SWIG_ExplosionType_opAssign(long jarg1, SWIG_ExplosionType jarg1_, long jarg2, SWIG_ExplosionType jarg2_);
  public final static native boolean SWIG_ExplosionType_opEquals(long jarg1, SWIG_ExplosionType jarg1_, long jarg2, SWIG_ExplosionType jarg2_);
  public final static native boolean SWIG_ExplosionType_opNotEquals(long jarg1, SWIG_ExplosionType jarg1_, long jarg2, SWIG_ExplosionType jarg2_);
  public final static native boolean SWIG_ExplosionType_opLessThan(long jarg1, SWIG_ExplosionType jarg1_, long jarg2, SWIG_ExplosionType jarg2_);
  public final static native int SWIG_ExplosionType_getID(long jarg1, SWIG_ExplosionType jarg1_);
  public final static native String SWIG_ExplosionType_getName(long jarg1, SWIG_ExplosionType jarg1_);
  public final static native void delete_SWIG_ExplosionType(long jarg1);
  public final static native long getExplosionType(long jarg1);
  public final static native long allExplosionTypes();
  public final static native void initExplosionTypes();
  public final static native long ExplosionTypeNone_get();
  public final static native long ExplosionTypeNormal_get();
  public final static native long Radial_Splash_get();
  public final static native long Enemy_Splash_get();
  public final static native long ExplosionTypeLockdown_get();
  public final static native long Nuclear_Missile_get();
  public final static native long ExplosionTypeParasite_get();
  public final static native long Broodlings_get();
  public final static native long ExplosionTypeEMP_Shockwave_get();
  public final static native long ExplosionTypeIrradiate_get();
  public final static native long ExplosionTypeEnsnare_get();
  public final static native long ExplosionTypePlague_get();
  public final static native long ExplosionTypeStasis_Field_get();
  public final static native long ExplosionTypeDark_Swarm_get();
  public final static native long ExplosionTypeConsume_get();
  public final static native long ExplosionTypeYamato_Gun_get();
  public final static native long ExplosionTypeRestoration_get();
  public final static native long ExplosionTypeDisruption_Web_get();
  public final static native long ExplosionTypeCorrosive_Acid_get();
  public final static native long ExplosionTypeMind_Control_get();
  public final static native long ExplosionTypeFeedback_get();
  public final static native long ExplosionTypeOptical_Flare_get();
  public final static native long ExplosionTypeMaelstrom_get();
  public final static native long Air_Splash_get();
  public final static native long ExplosionTypeUnknown_get();
  public final static native int FLAG_COUNT_get();
  public final static native String SWIG_Force_getName(long jarg1, SWIG_Force jarg1_);
  public final static native long SWIG_Force_getPlayers(long jarg1, SWIG_Force jarg1_);
  public final static native void delete_SWIG_Force(long jarg1);
  public final static native long SWIG_Game_getForces(long jarg1, SWIG_Game jarg1_);
  public final static native long SWIG_Game_getPlayers(long jarg1, SWIG_Game jarg1_);
  public final static native long SWIG_Game_getAllUnits(long jarg1, SWIG_Game jarg1_);
  public final static native long SWIG_Game_getMinerals(long jarg1, SWIG_Game jarg1_);
  public final static native long SWIG_Game_getGeysers(long jarg1, SWIG_Game jarg1_);
  public final static native long SWIG_Game_getNeutralUnits(long jarg1, SWIG_Game jarg1_);
  public final static native long SWIG_Game_getStaticMinerals(long jarg1, SWIG_Game jarg1_);
  public final static native long SWIG_Game_getStaticGeysers(long jarg1, SWIG_Game jarg1_);
  public final static native long SWIG_Game_getStaticNeutralUnits(long jarg1, SWIG_Game jarg1_);
  public final static native int SWIG_Game_getLatency(long jarg1, SWIG_Game jarg1_);
  public final static native int SWIG_Game_getFrameCount(long jarg1, SWIG_Game jarg1_);
  public final static native int SWIG_Game_getMouseX(long jarg1, SWIG_Game jarg1_);
  public final static native int SWIG_Game_getMouseY(long jarg1, SWIG_Game jarg1_);
  public final static native int SWIG_Game_getScreenX(long jarg1, SWIG_Game jarg1_);
  public final static native int SWIG_Game_getScreenY(long jarg1, SWIG_Game jarg1_);
  public final static native boolean SWIG_Game_isFlagEnabled(long jarg1, SWIG_Game jarg1_, int jarg2);
  public final static native void SWIG_Game_enableFlag(long jarg1, SWIG_Game jarg1_, int jarg2);
  public final static native long SWIG_Game_unitsOnTile(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3);
  public final static native long SWIG_Game_getLastError(long jarg1, SWIG_Game jarg1_);
  public final static native int SWIG_Game_mapWidth(long jarg1, SWIG_Game jarg1_);
  public final static native int SWIG_Game_mapHeight(long jarg1, SWIG_Game jarg1_);
  public final static native String SWIG_Game_mapFilename(long jarg1, SWIG_Game jarg1_);
  public final static native String SWIG_Game_mapName(long jarg1, SWIG_Game jarg1_);
  public final static native int SWIG_Game_getMapHash(long jarg1, SWIG_Game jarg1_);
  public final static native int SWIG_Game_getGroundHeight(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3);
  public final static native boolean SWIG_Game_isWalkable(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3);
  public final static native boolean SWIG_Game_isBuildable__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3);
  public final static native boolean SWIG_Game_isVisible__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3);
  public final static native boolean SWIG_Game_isExplored__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3);
  public final static native boolean SWIG_Game_hasCreep__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3);
  public final static native boolean SWIG_Game_hasPower__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native boolean SWIG_Game_isBuildable__SWIG_1(long jarg1, SWIG_Game jarg1_, long jarg2);
  public final static native boolean SWIG_Game_isVisible__SWIG_1(long jarg1, SWIG_Game jarg1_, long jarg2);
  public final static native boolean SWIG_Game_isExplored__SWIG_1(long jarg1, SWIG_Game jarg1_, long jarg2);
  public final static native boolean SWIG_Game_hasCreep__SWIG_1(long jarg1, SWIG_Game jarg1_, long jarg2);
  public final static native boolean SWIG_Game_hasPower__SWIG_1(long jarg1, SWIG_Game jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native boolean SWIG_Game_canBuildHere(long jarg1, SWIG_Game jarg1_, long jarg2, SWIG_Unit jarg2_, long jarg3, long jarg4, SWIG_UnitType jarg4_);
  public final static native boolean SWIG_Game_canMake(long jarg1, SWIG_Game jarg1_, long jarg2, SWIG_Unit jarg2_, long jarg3, SWIG_UnitType jarg3_);
  public final static native boolean SWIG_Game_canResearch(long jarg1, SWIG_Game jarg1_, long jarg2, SWIG_Unit jarg2_, long jarg3);
  public final static native boolean SWIG_Game_canUpgrade(long jarg1, SWIG_Game jarg1_, long jarg2, SWIG_Unit jarg2_, long jarg3);
  public final static native long SWIG_Game_getStartLocations(long jarg1, SWIG_Game jarg1_);
  public final static native void SWIG_Game_printf(long jarg1, SWIG_Game jarg1_, String jarg2);
  public final static native void SWIG_Game_sendText(long jarg1, SWIG_Game jarg1_, String jarg2);
  public final static native void SWIG_Game_changeRace(long jarg1, SWIG_Game jarg1_, long jarg2);
  public final static native boolean SWIG_Game_isMultiplayer(long jarg1, SWIG_Game jarg1_);
  public final static native boolean SWIG_Game_isPaused(long jarg1, SWIG_Game jarg1_);
  public final static native boolean SWIG_Game_isReplay(long jarg1, SWIG_Game jarg1_);
  public final static native void SWIG_Game_startGame(long jarg1, SWIG_Game jarg1_);
  public final static native void SWIG_Game_pauseGame(long jarg1, SWIG_Game jarg1_);
  public final static native void SWIG_Game_resumeGame(long jarg1, SWIG_Game jarg1_);
  public final static native void SWIG_Game_leaveGame(long jarg1, SWIG_Game jarg1_);
  public final static native void SWIG_Game_restartGame(long jarg1, SWIG_Game jarg1_);
  public final static native void SWIG_Game_setLocalSpeed__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2);
  public final static native void SWIG_Game_setLocalSpeed__SWIG_1(long jarg1, SWIG_Game jarg1_);
  public final static native long SWIG_Game_getSelectedUnits(long jarg1, SWIG_Game jarg1_);
  public final static native long SWIG_Game_self(long jarg1, SWIG_Game jarg1_);
  public final static native long SWIG_Game_enemy(long jarg1, SWIG_Game jarg1_);
  public final static native void SWIG_Game_drawText(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, String jarg5);
  public final static native void SWIG_Game_drawTextMap(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, String jarg4);
  public final static native void SWIG_Game_drawTextMouse(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, String jarg4);
  public final static native void SWIG_Game_drawTextScreen(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, String jarg4);
  public final static native void SWIG_Game_drawBox__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, long jarg7, SWIG_Color jarg7_, boolean jarg8);
  public final static native void SWIG_Game_drawBox__SWIG_1(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, long jarg7, SWIG_Color jarg7_);
  public final static native void SWIG_Game_drawBoxMap__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, SWIG_Color jarg6_, boolean jarg7);
  public final static native void SWIG_Game_drawBoxMap__SWIG_1(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, SWIG_Color jarg6_);
  public final static native void SWIG_Game_drawBoxMouse__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, SWIG_Color jarg6_, boolean jarg7);
  public final static native void SWIG_Game_drawBoxMouse__SWIG_1(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, SWIG_Color jarg6_);
  public final static native void SWIG_Game_drawBoxScreen__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, SWIG_Color jarg6_, boolean jarg7);
  public final static native void SWIG_Game_drawBoxScreen__SWIG_1(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, SWIG_Color jarg6_);
  public final static native void SWIG_Game_drawTriangle__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, int jarg8, long jarg9, SWIG_Color jarg9_, boolean jarg10);
  public final static native void SWIG_Game_drawTriangle__SWIG_1(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, int jarg8, long jarg9, SWIG_Color jarg9_);
  public final static native void SWIG_Game_drawTriangleMap__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, long jarg8, SWIG_Color jarg8_, boolean jarg9);
  public final static native void SWIG_Game_drawTriangleMap__SWIG_1(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, long jarg8, SWIG_Color jarg8_);
  public final static native void SWIG_Game_drawTriangleMouse__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, long jarg8, SWIG_Color jarg8_, boolean jarg9);
  public final static native void SWIG_Game_drawTriangleMouse__SWIG_1(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, long jarg8, SWIG_Color jarg8_);
  public final static native void SWIG_Game_drawTriangleScreen__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, long jarg8, SWIG_Color jarg8_, boolean jarg9);
  public final static native void SWIG_Game_drawTriangleScreen__SWIG_1(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7, long jarg8, SWIG_Color jarg8_);
  public final static native void SWIG_Game_drawCircle__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, SWIG_Color jarg6_, boolean jarg7);
  public final static native void SWIG_Game_drawCircle__SWIG_1(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, SWIG_Color jarg6_);
  public final static native void SWIG_Game_drawCircleMap__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, long jarg5, SWIG_Color jarg5_, boolean jarg6);
  public final static native void SWIG_Game_drawCircleMap__SWIG_1(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, long jarg5, SWIG_Color jarg5_);
  public final static native void SWIG_Game_drawCircleMouse__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, long jarg5, SWIG_Color jarg5_, boolean jarg6);
  public final static native void SWIG_Game_drawCircleMouse__SWIG_1(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, long jarg5, SWIG_Color jarg5_);
  public final static native void SWIG_Game_drawCircleScreen__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, long jarg5, SWIG_Color jarg5_, boolean jarg6);
  public final static native void SWIG_Game_drawCircleScreen__SWIG_1(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, long jarg5, SWIG_Color jarg5_);
  public final static native void SWIG_Game_drawEllipse__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, long jarg7, SWIG_Color jarg7_, boolean jarg8);
  public final static native void SWIG_Game_drawEllipse__SWIG_1(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, long jarg7, SWIG_Color jarg7_);
  public final static native void SWIG_Game_drawEllipseMap__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, SWIG_Color jarg6_, boolean jarg7);
  public final static native void SWIG_Game_drawEllipseMap__SWIG_1(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, SWIG_Color jarg6_);
  public final static native void SWIG_Game_drawEllipseMouse__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, SWIG_Color jarg6_, boolean jarg7);
  public final static native void SWIG_Game_drawEllipseMouse__SWIG_1(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, SWIG_Color jarg6_);
  public final static native void SWIG_Game_drawEllipseScreen__SWIG_0(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, SWIG_Color jarg6_, boolean jarg7);
  public final static native void SWIG_Game_drawEllipseScreen__SWIG_1(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, SWIG_Color jarg6_);
  public final static native void SWIG_Game_drawDot(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, long jarg5, SWIG_Color jarg5_);
  public final static native void SWIG_Game_drawDotMap(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, long jarg4, SWIG_Color jarg4_);
  public final static native void SWIG_Game_drawDotMouse(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, long jarg4, SWIG_Color jarg4_);
  public final static native void SWIG_Game_drawDotScreen(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, long jarg4, SWIG_Color jarg4_);
  public final static native void SWIG_Game_drawLine(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, long jarg7, SWIG_Color jarg7_);
  public final static native void SWIG_Game_drawLineMap(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, SWIG_Color jarg6_);
  public final static native void SWIG_Game_drawLineMouse(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, SWIG_Color jarg6_);
  public final static native void SWIG_Game_drawLineScreen(long jarg1, SWIG_Game jarg1_, int jarg2, int jarg3, int jarg4, int jarg5, long jarg6, SWIG_Color jarg6_);
  public final static native void delete_SWIG_Game(long jarg1);
  public final static native void Broodwar_set(long jarg1, SWIG_Game jarg1_);
  public final static native long Broodwar_get();
  public final static native long new_SWIG_Order__SWIG_0();
  public final static native long new_SWIG_Order__SWIG_1(int jarg1);
  public final static native long new_SWIG_Order__SWIG_2(long jarg1, SWIG_Order jarg1_);
  public final static native long SWIG_Order_opAssign(long jarg1, SWIG_Order jarg1_, long jarg2, SWIG_Order jarg2_);
  public final static native boolean SWIG_Order_opEquals(long jarg1, SWIG_Order jarg1_, long jarg2, SWIG_Order jarg2_);
  public final static native boolean SWIG_Order_opNotEquals(long jarg1, SWIG_Order jarg1_, long jarg2, SWIG_Order jarg2_);
  public final static native boolean SWIG_Order_opLessThan(long jarg1, SWIG_Order jarg1_, long jarg2, SWIG_Order jarg2_);
  public final static native int SWIG_Order_getID(long jarg1, SWIG_Order jarg1_);
  public final static native String SWIG_Order_getName(long jarg1, SWIG_Order jarg1_);
  public final static native void delete_SWIG_Order(long jarg1);
  public final static native long getOrder(long jarg1);
  public final static native long allOrders();
  public final static native void initOrders();
  public final static native long Die_get();
  public final static native long Stop_get();
  public final static native long Guard_get();
  public final static native long PlayerGuard_get();
  public final static native long TurretGuard_get();
  public final static native long BunkerGuard_get();
  public final static native long Move_get();
  public final static native long ReaverStop_get();
  public final static native long Attack1_get();
  public final static native long Attack2_get();
  public final static native long AttackUnit_get();
  public final static native long AttackFixedRange_get();
  public final static native long AttackTile_get();
  public final static native long Hover_get();
  public final static native long AttackMove_get();
  public final static native long InfestMine1_get();
  public final static native long Nothing1_get();
  public final static native long Powerup1_get();
  public final static native long TowerGuard_get();
  public final static native long TowerAttack_get();
  public final static native long VultureMine_get();
  public final static native long StayinRange_get();
  public final static native long TurretAttack_get();
  public final static native long Nothing2_get();
  public final static native long Nothing3_get();
  public final static native long DroneStartBuild_get();
  public final static native long DroneBuild_get();
  public final static native long InfestMine2_get();
  public final static native long InfestMine3_get();
  public final static native long InfestMine4_get();
  public final static native long BuildTerran_get();
  public final static native long BuildProtoss1_get();
  public final static native long BuildProtoss2_get();
  public final static native long ConstructingBuilding_get();
  public final static native long Repair1_get();
  public final static native long Repair2_get();
  public final static native long PlaceAddon_get();
  public final static native long BuildAddon_get();
  public final static native long Train_get();
  public final static native long RallyPoint1_get();
  public final static native long RallyPoint2_get();
  public final static native long ZergBirth_get();
  public final static native long Morph1_get();
  public final static native long Morph2_get();
  public final static native long BuildSelf1_get();
  public final static native long ZergBuildSelf_get();
  public final static native long Build5_get();
  public final static native long Enternyduscanal_get();
  public final static native long BuildSelf2_get();
  public final static native long Follow_get();
  public final static native long Carrier_get();
  public final static native long CarrierIgnore1_get();
  public final static native long CarrierStop_get();
  public final static native long CarrierAttack1_get();
  public final static native long CarrierAttack2_get();
  public final static native long CarrierIgnore2_get();
  public final static native long CarrierFight_get();
  public final static native long HoldPosition1_get();
  public final static native long Reaver_get();
  public final static native long ReaverAttack1_get();
  public final static native long ReaverAttack2_get();
  public final static native long ReaverFight_get();
  public final static native long ReaverHold_get();
  public final static native long TrainFighter_get();
  public final static native long StrafeUnit1_get();
  public final static native long StrafeUnit2_get();
  public final static native long RechargeShields1_get();
  public final static native long Rechargeshields2_get();
  public final static native long ShieldBattery_get();
  public final static native long Return_get();
  public final static native long DroneLand_get();
  public final static native long BuildingLand_get();
  public final static native long BuildingLiftoff_get();
  public final static native long DroneLiftoff_get();
  public final static native long Liftoff_get();
  public final static native long ResearchTech_get();
  public final static native long Upgrade_get();
  public final static native long Larva_get();
  public final static native long SpawningLarva_get();
  public final static native long Harvest1_get();
  public final static native long Harvest2_get();
  public final static native long MoveToGas_get();
  public final static native long WaitForGas_get();
  public final static native long HarvestGas_get();
  public final static native long ReturnGas_get();
  public final static native long MoveToMinerals_get();
  public final static native long WaitForMinerals_get();
  public final static native long MiningMinerals_get();
  public final static native long Harvest3_get();
  public final static native long Harvest4_get();
  public final static native long ReturnMinerals_get();
  public final static native long Harvest5_get();
  public final static native long EnterTransport_get();
  public final static native long Pickup1_get();
  public final static native long Pickup2_get();
  public final static native long Pickup3_get();
  public final static native long Pickup4_get();
  public final static native long Powerup2_get();
  public final static native long SiegeMode_get();
  public final static native long TankMode_get();
  public final static native long WatchTarget_get();
  public final static native long InitCreepGrowth_get();
  public final static native long SpreadCreep_get();
  public final static native long StoppingCreepGrowth_get();
  public final static native long GuardianAspect_get();
  public final static native long WarpingArchon_get();
  public final static native long CompletingArchonsummon_get();
  public final static native long HoldPosition2_get();
  public final static native long HoldPosition3_get();
  public final static native long Cloak_get();
  public final static native long Decloak_get();
  public final static native long Unload_get();
  public final static native long MoveUnload_get();
  public final static native long FireYamatoGun1_get();
  public final static native long FireYamatoGun2_get();
  public final static native long MagnaPulse_get();
  public final static native long Burrow_get();
  public final static native long Burrowed_get();
  public final static native long Unburrow_get();
  public final static native long DarkSwarm_get();
  public final static native long CastParasite_get();
  public final static native long SummonBroodlings_get();
  public final static native long EmpShockwave_get();
  public final static native long NukeWait_get();
  public final static native long NukeTrain_get();
  public final static native long NukeLaunch_get();
  public final static native long NukePaint_get();
  public final static native long NukeUnit_get();
  public final static native long NukeGround_get();
  public final static native long NukeTrack_get();
  public final static native long InitArbiter_get();
  public final static native long CloakNearbyUnits_get();
  public final static native long PlaceMine_get();
  public final static native long Rightclickaction_get();
  public final static native long SapUnit_get();
  public final static native long SapLocation_get();
  public final static native long HoldPosition4_get();
  public final static native long Teleport_get();
  public final static native long TeleporttoLocation_get();
  public final static native long PlaceScanner_get();
  public final static native long Scanner_get();
  public final static native long DefensiveMatrix_get();
  public final static native long PsiStorm_get();
  public final static native long OrderIrradiate_get();
  public final static native long OrderPlague_get();
  public final static native long OrderConsume_get();
  public final static native long OrderEnsnare_get();
  public final static native long StasisField_get();
  public final static native long Hallucination1_get();
  public final static native long Hallucination2_get();
  public final static native long ResetCollision1_get();
  public final static native long ResetCollision2_get();
  public final static native long Patrol_get();
  public final static native long CTFCOPInit_get();
  public final static native long CTFCOP1_get();
  public final static native long CTFCOP2_get();
  public final static native long ComputerAI_get();
  public final static native long AtkMoveEP_get();
  public final static native long HarassMove_get();
  public final static native long AIPatrol_get();
  public final static native long GuardPost_get();
  public final static native long RescuePassive_get();
  public final static native long OrderNeutral_get();
  public final static native long ComputerReturn_get();
  public final static native long InitPsiProvider_get();
  public final static native long SelfDestrucing_get();
  public final static native long Critter_get();
  public final static native long HiddenGun_get();
  public final static native long OpenDoor_get();
  public final static native long CloseDoor_get();
  public final static native long HideTrap_get();
  public final static native long RevealTrap_get();
  public final static native long Enabledoodad_get();
  public final static native long Disabledoodad_get();
  public final static native long Warpin_get();
  public final static native long Medic_get();
  public final static native long MedicHeal1_get();
  public final static native long HealMove_get();
  public final static native long MedicHoldPosition_get();
  public final static native long MedicHeal2_get();
  public final static native long OrderRestoration_get();
  public final static native long CastDisruptionWeb_get();
  public final static native long CastMindControl_get();
  public final static native long WarpingDarkArchon_get();
  public final static native long CastFeedback_get();
  public final static native long CastOpticalFlare_get();
  public final static native long CastMaelstrom_get();
  public final static native long JunkYardDog_get();
  public final static native long Fatal_get();
  public final static native long OrderNone_get();
  public final static native long OrderUnknown_get();
  public final static native int SWIG_Player_getID(long jarg1, SWIG_Player jarg1_);
  public final static native String SWIG_Player_getName(long jarg1, SWIG_Player jarg1_);
  public final static native long SWIG_Player_getUnits(long jarg1, SWIG_Player jarg1_);
  public final static native long SWIG_Player_getRace(long jarg1, SWIG_Player jarg1_);
  public final static native long SWIG_Player_playerType(long jarg1, SWIG_Player jarg1_);
  public final static native long SWIG_Player_getForce(long jarg1, SWIG_Player jarg1_);
  public final static native boolean SWIG_Player_isAlly(long jarg1, SWIG_Player jarg1_, long jarg2, SWIG_Player jarg2_);
  public final static native boolean SWIG_Player_isEnemy(long jarg1, SWIG_Player jarg1_, long jarg2, SWIG_Player jarg2_);
  public final static native boolean SWIG_Player_isNeutral(long jarg1, SWIG_Player jarg1_);
  public final static native long SWIG_Player_getStartLocation(long jarg1, SWIG_Player jarg1_);
  public final static native boolean SWIG_Player_leftGame(long jarg1, SWIG_Player jarg1_);
  public final static native int SWIG_Player_minerals(long jarg1, SWIG_Player jarg1_);
  public final static native int SWIG_Player_gas(long jarg1, SWIG_Player jarg1_);
  public final static native int SWIG_Player_cumulativeMinerals(long jarg1, SWIG_Player jarg1_);
  public final static native int SWIG_Player_cumulativeGas(long jarg1, SWIG_Player jarg1_);
  public final static native int SWIG_Player_supplyTotal__SWIG_0(long jarg1, SWIG_Player jarg1_);
  public final static native int SWIG_Player_supplyUsed__SWIG_0(long jarg1, SWIG_Player jarg1_);
  public final static native int SWIG_Player_supplyTotal__SWIG_1(long jarg1, SWIG_Player jarg1_, long jarg2);
  public final static native int SWIG_Player_supplyUsed__SWIG_1(long jarg1, SWIG_Player jarg1_, long jarg2);
  public final static native int SWIG_Player_allUnitCount(long jarg1, SWIG_Player jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native int SWIG_Player_completedUnitCount(long jarg1, SWIG_Player jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native int SWIG_Player_incompleteUnitCount(long jarg1, SWIG_Player jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native int SWIG_Player_deadUnitCount(long jarg1, SWIG_Player jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native int SWIG_Player_killedUnitCount(long jarg1, SWIG_Player jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native int SWIG_Player_getUpgradeLevel(long jarg1, SWIG_Player jarg1_, long jarg2);
  public final static native boolean SWIG_Player_hasResearched(long jarg1, SWIG_Player jarg1_, long jarg2);
  public final static native boolean SWIG_Player_isResearching(long jarg1, SWIG_Player jarg1_, long jarg2);
  public final static native boolean SWIG_Player_isUpgrading(long jarg1, SWIG_Player jarg1_, long jarg2);
  public final static native void delete_SWIG_Player(long jarg1);
  public final static native long new_SWIG_PlayerType__SWIG_0();
  public final static native long new_SWIG_PlayerType__SWIG_1(int jarg1);
  public final static native long new_SWIG_PlayerType__SWIG_2(long jarg1, SWIG_PlayerType jarg1_);
  public final static native long SWIG_PlayerType_opAssign(long jarg1, SWIG_PlayerType jarg1_, long jarg2, SWIG_PlayerType jarg2_);
  public final static native boolean SWIG_PlayerType_opEquals(long jarg1, SWIG_PlayerType jarg1_, long jarg2, SWIG_PlayerType jarg2_);
  public final static native boolean SWIG_PlayerType_opNotEquals(long jarg1, SWIG_PlayerType jarg1_, long jarg2, SWIG_PlayerType jarg2_);
  public final static native boolean SWIG_PlayerType_opLessThan(long jarg1, SWIG_PlayerType jarg1_, long jarg2, SWIG_PlayerType jarg2_);
  public final static native int SWIG_PlayerType_getID(long jarg1, SWIG_PlayerType jarg1_);
  public final static native String SWIG_PlayerType_getName(long jarg1, SWIG_PlayerType jarg1_);
  public final static native void delete_SWIG_PlayerType(long jarg1);
  public final static native long getPlayerType(long jarg1);
  public final static native long allPlayerTypes();
  public final static native void initPlayerTypes();
  public final static native long NotUsed_get();
  public final static native long Computer_get();
  public final static native long Human_get();
  public final static native long Rescuable_get();
  public final static native long ComputerSlot_get();
  public final static native long OpenSlot_get();
  public final static native long PlayerTypeNeutral_get();
  public final static native long ClosedSlot_get();
  public final static native long HumanDefeated_get();
  public final static native long ComputerDefeated_get();
  public final static native long PlayerTypeNone_get();
  public final static native long PlayerTypeUnknown_get();
  public final static native long new_SWIG_Position__SWIG_0();
  public final static native long new_SWIG_Position__SWIG_1(long jarg1, SWIG_TilePosition jarg1_);
  public final static native long new_SWIG_Position__SWIG_2(int jarg1, int jarg2);
  public final static native boolean SWIG_Position_opEquals(long jarg1, SWIG_Position jarg1_, long jarg2, SWIG_Position jarg2_);
  public final static native boolean SWIG_Position_opNotEquals(long jarg1, SWIG_Position jarg1_, long jarg2, SWIG_Position jarg2_);
  public final static native boolean SWIG_Position_opLessThan(long jarg1, SWIG_Position jarg1_, long jarg2, SWIG_Position jarg2_);
  public final static native long SWIG_Position_opPlus(long jarg1, SWIG_Position jarg1_, long jarg2, SWIG_Position jarg2_);
  public final static native long SWIG_Position_opMinus(long jarg1, SWIG_Position jarg1_, long jarg2, SWIG_Position jarg2_);
  public final static native long SWIG_Position_opAdd(long jarg1, SWIG_Position jarg1_, long jarg2, SWIG_Position jarg2_);
  public final static native long SWIG_Position_opSubtract(long jarg1, SWIG_Position jarg1_, long jarg2, SWIG_Position jarg2_);
  public final static native double SWIG_Position_getDistance(long jarg1, SWIG_Position jarg1_, long jarg2, SWIG_Position jarg2_);
  public final static native double SWIG_Position_getLength(long jarg1, SWIG_Position jarg1_);
  public final static native long SWIG_Position_x(long jarg1, SWIG_Position jarg1_);
  public final static native long SWIG_Position_y(long jarg1, SWIG_Position jarg1_);
  public final static native int SWIG_Position_xConst(long jarg1, SWIG_Position jarg1_);
  public final static native int SWIG_Position_yConst(long jarg1, SWIG_Position jarg1_);
  public final static native void delete_SWIG_Position(long jarg1);
  public final static native long PositionInvalid_get();
  public final static native long PositionNone_get();
  public final static native long PositionUnknown_get();
  public final static native long new_SWIG_Race__SWIG_0();
  public final static native long new_SWIG_Race__SWIG_1(int jarg1);
  public final static native long new_SWIG_Race__SWIG_2(long jarg1, SWIG_Race jarg1_);
  public final static native long SWIG_Race_opAssign(long jarg1, SWIG_Race jarg1_, long jarg2, SWIG_Race jarg2_);
  public final static native boolean SWIG_Race_opEquals(long jarg1, SWIG_Race jarg1_, long jarg2, SWIG_Race jarg2_);
  public final static native boolean SWIG_Race_opNotEquals(long jarg1, SWIG_Race jarg1_, long jarg2, SWIG_Race jarg2_);
  public final static native boolean SWIG_Race_opLessThan(long jarg1, SWIG_Race jarg1_, long jarg2, SWIG_Race jarg2_);
  public final static native int SWIG_Race_getID(long jarg1, SWIG_Race jarg1_);
  public final static native String SWIG_Race_getName(long jarg1, SWIG_Race jarg1_);
  public final static native long SWIG_Race_getWorker(long jarg1, SWIG_Race jarg1_);
  public final static native long SWIG_Race_getCenter(long jarg1, SWIG_Race jarg1_);
  public final static native long SWIG_Race_getRefinery(long jarg1, SWIG_Race jarg1_);
  public final static native long SWIG_Race_getTransport(long jarg1, SWIG_Race jarg1_);
  public final static native long SWIG_Race_getSupplyProvider(long jarg1, SWIG_Race jarg1_);
  public final static native void delete_SWIG_Race(long jarg1);
  public final static native long getRace(long jarg1);
  public final static native long allRaces();
  public final static native void initRaces();
  public final static native long Zerg_get();
  public final static native long Terran_get();
  public final static native long Protoss_get();
  public final static native long Random_get();
  public final static native long Other_get();
  public final static native long RaceNone_get();
  public final static native long RaceUnknown_get();
  public final static native long new_SWIG_TechType__SWIG_0();
  public final static native long new_SWIG_TechType__SWIG_1(int jarg1);
  public final static native long new_SWIG_TechType__SWIG_2(long jarg1, SWIG_TechType jarg1_);
  public final static native long SWIG_TechType_opAssign(long jarg1, SWIG_TechType jarg1_, long jarg2, SWIG_TechType jarg2_);
  public final static native boolean SWIG_TechType_opEquals(long jarg1, SWIG_TechType jarg1_, long jarg2, SWIG_TechType jarg2_);
  public final static native boolean SWIG_TechType_opNotEquals(long jarg1, SWIG_TechType jarg1_, long jarg2, SWIG_TechType jarg2_);
  public final static native boolean SWIG_TechType_opLessThan(long jarg1, SWIG_TechType jarg1_, long jarg2, SWIG_TechType jarg2_);
  public final static native int SWIG_TechType_getID(long jarg1, SWIG_TechType jarg1_);
  public final static native String SWIG_TechType_getName(long jarg1, SWIG_TechType jarg1_);
  public final static native int SWIG_TechType_mineralPrice(long jarg1, SWIG_TechType jarg1_);
  public final static native int SWIG_TechType_gasPrice(long jarg1, SWIG_TechType jarg1_);
  public final static native int SWIG_TechType_energyUsed(long jarg1, SWIG_TechType jarg1_);
  public final static native long SWIG_TechType_whatResearches(long jarg1, SWIG_TechType jarg1_);
  public final static native long SWIG_TechType_getWeapon(long jarg1, SWIG_TechType jarg1_);
  public final static native long SWIG_TechType_whatUses(long jarg1, SWIG_TechType jarg1_);
  public final static native void delete_SWIG_TechType(long jarg1);
  public final static native long getTechType(long jarg1);
  public final static native long allTechTypes();
  public final static native void initTechTypes();
  public final static native long Stim_Packs_get();
  public final static native long TechTypeLockdown_get();
  public final static native long TechTypeEMP_Shockwave_get();
  public final static native long Spider_Mines_get();
  public final static native long Scanner_Sweep_get();
  public final static native long Tank_Siege_Mode_get();
  public final static native long Defensive_Matrix_get();
  public final static native long TechTypeIrradiate_get();
  public final static native long TechTypeYamato_Gun_get();
  public final static native long Cloaking_Field_get();
  public final static native long Personnel_Cloaking_get();
  public final static native long Burrowing_get();
  public final static native long Infestation_get();
  public final static native long TechTypeSpawn_Broodlings_get();
  public final static native long TechTypeDark_Swarm_get();
  public final static native long TechTypePlague_get();
  public final static native long TechTypeConsume_get();
  public final static native long TechTypeEnsnare_get();
  public final static native long TechTypeParasite_get();
  public final static native long TechTypePsionic_Storm_get();
  public final static native long Hallucination_get();
  public final static native long Recall_get();
  public final static native long TechTypeStasis_Field_get();
  public final static native long Archon_Warp_get();
  public final static native long TechTypeRestoration_get();
  public final static native long TechTypeDisruption_Web_get();
  public final static native long TechTypeMind_Control_get();
  public final static native long Dark_Archon_Meld_get();
  public final static native long TechTypeFeedback_get();
  public final static native long TechTypeOptical_Flare_get();
  public final static native long TechTypeMaelstrom_get();
  public final static native long Lurker_Aspect_get();
  public final static native long Healing_get();
  public final static native long TechTypeNone_get();
  public final static native long TechTypeUnknown_get();
  public final static native long TechTypeNuclear_Strike_get();
  public final static native long new_SWIG_TilePosition__SWIG_0();
  public final static native long new_SWIG_TilePosition__SWIG_1(long jarg1, SWIG_Position jarg1_);
  public final static native long new_SWIG_TilePosition__SWIG_2(int jarg1, int jarg2);
  public final static native boolean SWIG_TilePosition_opEquals(long jarg1, SWIG_TilePosition jarg1_, long jarg2, SWIG_TilePosition jarg2_);
  public final static native boolean SWIG_TilePosition_opNotEquals(long jarg1, SWIG_TilePosition jarg1_, long jarg2, SWIG_TilePosition jarg2_);
  public final static native boolean SWIG_TilePosition_opLessThan(long jarg1, SWIG_TilePosition jarg1_, long jarg2, SWIG_TilePosition jarg2_);
  public final static native long SWIG_TilePosition_opPlus(long jarg1, SWIG_TilePosition jarg1_, long jarg2, SWIG_TilePosition jarg2_);
  public final static native long SWIG_TilePosition_opMinus(long jarg1, SWIG_TilePosition jarg1_, long jarg2, SWIG_TilePosition jarg2_);
  public final static native long SWIG_TilePosition_opAdd(long jarg1, SWIG_TilePosition jarg1_, long jarg2, SWIG_TilePosition jarg2_);
  public final static native long SWIG_TilePosition_opSubtract(long jarg1, SWIG_TilePosition jarg1_, long jarg2, SWIG_TilePosition jarg2_);
  public final static native double SWIG_TilePosition_getDistance(long jarg1, SWIG_TilePosition jarg1_, long jarg2, SWIG_TilePosition jarg2_);
  public final static native double SWIG_TilePosition_getLength(long jarg1, SWIG_TilePosition jarg1_);
  public final static native boolean SWIG_TilePosition_isValid(long jarg1, SWIG_TilePosition jarg1_);
  public final static native long SWIG_TilePosition_x(long jarg1, SWIG_TilePosition jarg1_);
  public final static native long SWIG_TilePosition_y(long jarg1, SWIG_TilePosition jarg1_);
  public final static native int SWIG_TilePosition_xConst(long jarg1, SWIG_TilePosition jarg1_);
  public final static native int SWIG_TilePosition_yConst(long jarg1, SWIG_TilePosition jarg1_);
  public final static native void delete_SWIG_TilePosition(long jarg1);
  public final static native long TilePositionInvalid_get();
  public final static native long TilePositionNone_get();
  public final static native long TilePositionUnknown_get();
  public final static native long SWIG_Unit_getPlayer(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getType(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getInitialType(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getHitPoints(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getInitialHitPoints(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getShields(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getEnergy(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getResources(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getInitialResources(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getKillCount(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getGroundWeaponCooldown(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getAirWeaponCooldown(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getSpellCooldown(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getDefenseMatrixPoints(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getDefenseMatrixTimer(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getEnsnareTimer(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getIrradiateTimer(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getLockdownTimer(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getMaelstromTimer(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getPlagueTimer(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getRemoveTimer(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getStasisTimer(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getStimTimer(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getPosition(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getInitialPosition(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getTilePosition(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getInitialTilePosition(long jarg1, SWIG_Unit jarg1_);
  public final static native double SWIG_Unit_getDistance__SWIG_0(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_Unit jarg2_);
  public final static native double SWIG_Unit_getDistance__SWIG_1(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_Position jarg2_);
  public final static native double SWIG_Unit_getAngle(long jarg1, SWIG_Unit jarg1_);
  public final static native double SWIG_Unit_getVelocityX(long jarg1, SWIG_Unit jarg1_);
  public final static native double SWIG_Unit_getVelocityY(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getTarget(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getTargetPosition(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getOrder(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getOrderTarget(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getOrderTimer(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getSecondaryOrder(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getBuildUnit(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getRemainingBuildTime(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getRemainingTrainTime(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getChild(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getTrainingQueue(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getTransport(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getLoadedUnits(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getInterceptorCount(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getScarabCount(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getSpiderMineCount(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getTech(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getUpgrade(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getRemainingResearchTime(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getRemainingUpgradeTime(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getRallyPosition(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getRallyUnit(long jarg1, SWIG_Unit jarg1_);
  public final static native long SWIG_Unit_getAddon(long jarg1, SWIG_Unit jarg1_);
  public final static native int SWIG_Unit_getUpgradeLevel(long jarg1, SWIG_Unit jarg1_, long jarg2);
  public final static native boolean SWIG_Unit_exists(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isAccelerating(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isBeingConstructed(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isBeingHealed(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isBlind(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isBraking(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isBurrowed(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isCarryingGas(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isCarryingMinerals(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isCloaked(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isCompleted(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isConstructing(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isDefenseMatrixed(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isEnsnared(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isFollowing(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isGatheringGas(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isGatheringMinerals(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isHallucination(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isIdle(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isIrradiated(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isLifted(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isLoaded(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isLockedDown(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isMaelstrommed(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isMorphing(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isMoving(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isParasited(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isPatrolling(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isPlagued(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isRepairing(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isResearching(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isSelected(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isSieged(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isStartingAttack(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isStasised(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isStimmed(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isTraining(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isUnderStorm(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isUnpowered(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isUpgrading(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isVisible(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_isBeingGathered(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_attackMove(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_Position jarg2_);
  public final static native boolean SWIG_Unit_attackUnit(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_Unit jarg2_);
  public final static native boolean SWIG_Unit_rightClick__SWIG_0(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_Position jarg2_);
  public final static native boolean SWIG_Unit_rightClick__SWIG_1(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_Unit jarg2_);
  public final static native boolean SWIG_Unit_train(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native boolean SWIG_Unit_build(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_TilePosition jarg2_, long jarg3, SWIG_UnitType jarg3_);
  public final static native boolean SWIG_Unit_buildAddon(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native boolean SWIG_Unit_research(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_TechType jarg2_);
  public final static native boolean SWIG_Unit_upgrade(long jarg1, SWIG_Unit jarg1_, long jarg2);
  public final static native boolean SWIG_Unit_stop(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_holdPosition(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_patrol(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_Position jarg2_);
  public final static native boolean SWIG_Unit_follow(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_Unit jarg2_);
  public final static native boolean SWIG_Unit_setRallyPosition(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_Position jarg2_);
  public final static native boolean SWIG_Unit_setRallyUnit(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_Unit jarg2_);
  public final static native boolean SWIG_Unit_repair(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_Unit jarg2_);
  public final static native boolean SWIG_Unit_morph(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native boolean SWIG_Unit_burrow(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_unburrow(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_siege(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_unsiege(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_cloak(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_decloak(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_lift(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_land(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_TilePosition jarg2_);
  public final static native boolean SWIG_Unit_load(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_Unit jarg2_);
  public final static native boolean SWIG_Unit_unload(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_Unit jarg2_);
  public final static native boolean SWIG_Unit_unloadAll__SWIG_0(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_unloadAll__SWIG_1(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_Position jarg2_);
  public final static native boolean SWIG_Unit_cancelConstruction(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_haltConstruction(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_cancelMorph(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_cancelTrain__SWIG_0(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_cancelTrain__SWIG_1(long jarg1, SWIG_Unit jarg1_, int jarg2);
  public final static native boolean SWIG_Unit_cancelAddon(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_cancelResearch(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_cancelUpgrade(long jarg1, SWIG_Unit jarg1_);
  public final static native boolean SWIG_Unit_useTech__SWIG_0(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_TechType jarg2_);
  public final static native boolean SWIG_Unit_useTech__SWIG_1(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_TechType jarg2_, long jarg3, SWIG_Position jarg3_);
  public final static native boolean SWIG_Unit_useTech__SWIG_2(long jarg1, SWIG_Unit jarg1_, long jarg2, SWIG_TechType jarg2_, long jarg3, SWIG_Unit jarg3_);
  public final static native void delete_SWIG_Unit(long jarg1);
  public final static native long new_SWIG_UnitSizeType__SWIG_0();
  public final static native long new_SWIG_UnitSizeType__SWIG_1(int jarg1);
  public final static native long new_SWIG_UnitSizeType__SWIG_2(long jarg1, SWIG_UnitSizeType jarg1_);
  public final static native long SWIG_UnitSizeType_opAssign(long jarg1, SWIG_UnitSizeType jarg1_, long jarg2, SWIG_UnitSizeType jarg2_);
  public final static native boolean SWIG_UnitSizeType_opEquals(long jarg1, SWIG_UnitSizeType jarg1_, long jarg2, SWIG_UnitSizeType jarg2_);
  public final static native boolean SWIG_UnitSizeType_opNotEquals(long jarg1, SWIG_UnitSizeType jarg1_, long jarg2, SWIG_UnitSizeType jarg2_);
  public final static native boolean SWIG_UnitSizeType_opLessThan(long jarg1, SWIG_UnitSizeType jarg1_, long jarg2, SWIG_UnitSizeType jarg2_);
  public final static native int SWIG_UnitSizeType_getID(long jarg1, SWIG_UnitSizeType jarg1_);
  public final static native String SWIG_UnitSizeType_getName(long jarg1, SWIG_UnitSizeType jarg1_);
  public final static native void delete_SWIG_UnitSizeType(long jarg1);
  public final static native long getUnitSizeType(long jarg1);
  public final static native long allUnitSizeTypes();
  public final static native void initUnitSizeTypes();
  public final static native long UnitSizeTypeIndependent_get();
  public final static native long Small_get();
  public final static native long Medium_get();
  public final static native long Large_get();
  public final static native long UnitSizeTypeNone_get();
  public final static native long UnitSizeTypeUnknown_get();
  public final static native long new_SWIG_UnitType__SWIG_0();
  public final static native long new_SWIG_UnitType__SWIG_1(int jarg1);
  public final static native long new_SWIG_UnitType__SWIG_2(long jarg1, SWIG_UnitType jarg1_);
  public final static native long SWIG_UnitType_opAssign(long jarg1, SWIG_UnitType jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native boolean SWIG_UnitType_opEquals(long jarg1, SWIG_UnitType jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native boolean SWIG_UnitType_opNotEquals(long jarg1, SWIG_UnitType jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native boolean SWIG_UnitType_opLessThan(long jarg1, SWIG_UnitType jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native int SWIG_UnitType_getID(long jarg1, SWIG_UnitType jarg1_);
  public final static native String SWIG_UnitType_getName(long jarg1, SWIG_UnitType jarg1_);
  public final static native String SWIG_UnitType_getSubLabel(long jarg1, SWIG_UnitType jarg1_);
  public final static native long SWIG_UnitType_getRace(long jarg1, SWIG_UnitType jarg1_);
  public final static native long SWIG_UnitType_whatBuilds(long jarg1, SWIG_UnitType jarg1_);
  public final static native long SWIG_UnitType_requiredUnits(long jarg1, SWIG_UnitType jarg1_);
  public final static native long SWIG_UnitType_requiredTech(long jarg1, SWIG_UnitType jarg1_);
  public final static native long SWIG_UnitType_abilities(long jarg1, SWIG_UnitType jarg1_);
  public final static native long SWIG_UnitType_upgrades(long jarg1, SWIG_UnitType jarg1_);
  public final static native long SWIG_UnitType_armorUpgrade(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_maxHitPoints(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_maxShields(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_maxEnergy(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_armor(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_mineralPrice(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_gasPrice(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_buildTime(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_supplyRequired(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_supplyProvided(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_spaceRequired(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_spaceProvided(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_buildScore(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_destroyScore(long jarg1, SWIG_UnitType jarg1_);
  public final static native long SWIG_UnitType_size(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_tileWidth(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_tileHeight(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_dimensionLeft(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_dimensionUp(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_dimensionRight(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_dimensionDown(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_seekRange(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_sightRange(long jarg1, SWIG_UnitType jarg1_);
  public final static native long SWIG_UnitType_groundWeapon(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_maxGroundHits(long jarg1, SWIG_UnitType jarg1_);
  public final static native long SWIG_UnitType_airWeapon(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_maxAirHits(long jarg1, SWIG_UnitType jarg1_);
  public final static native double SWIG_UnitType_topSpeed(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_acceleration(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_haltDistance(long jarg1, SWIG_UnitType jarg1_);
  public final static native int SWIG_UnitType_turnRadius(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_canProduce(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_canAttack(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_canMove(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_isFlyer(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_regeneratesHP(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_isSpellcaster(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_hasPermanentCloak(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_isInvincible(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_isOrganic(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_isMechanical(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_isRobotic(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_isDetector(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_isResourceContainer(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_isResourceDepot(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_isRefinery(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_isWorker(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_requiresPsi(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_requiresCreep(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_isTwoUnitsInOneEgg(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_isBurrowable(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_isCloakable(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_isBuilding(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_isAddon(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_isFlyingBuilding(long jarg1, SWIG_UnitType jarg1_);
  public final static native boolean SWIG_UnitType_isNeutral(long jarg1, SWIG_UnitType jarg1_);
  public final static native void delete_SWIG_UnitType(long jarg1);
  public final static native long getUnitType(long jarg1);
  public final static native long allUnitTypes();
  public final static native void initUnitTypes();
  public final static native long Terran_Marine_get();
  public final static native long Terran_Ghost_get();
  public final static native long Terran_Vulture_get();
  public final static native long Terran_Goliath_get();
  public final static native long Terran_Siege_Tank_Tank_Mode_get();
  public final static native long Terran_SCV_get();
  public final static native long Terran_Wraith_get();
  public final static native long Terran_Science_Vessel_get();
  public final static native long Terran_Dropship_get();
  public final static native long Terran_Battlecruiser_get();
  public final static native long Terran_Vulture_Spider_Mine_get();
  public final static native long Terran_Nuclear_Missile_get();
  public final static native long Terran_Siege_Tank_Siege_Mode_get();
  public final static native long Terran_Firebat_get();
  public final static native long Spell_Scanner_Sweep_get();
  public final static native long Terran_Medic_get();
  public final static native long Zerg_Larva_get();
  public final static native long Zerg_Egg_get();
  public final static native long Zerg_Zergling_get();
  public final static native long Zerg_Hydralisk_get();
  public final static native long Zerg_Ultralisk_get();
  public final static native long Zerg_Broodling_get();
  public final static native long Zerg_Drone_get();
  public final static native long Zerg_Overlord_get();
  public final static native long Zerg_Mutalisk_get();
  public final static native long Zerg_Guardian_get();
  public final static native long Zerg_Queen_get();
  public final static native long Zerg_Defiler_get();
  public final static native long Zerg_Scourge_get();
  public final static native long Zerg_Infested_Terran_get();
  public final static native long Terran_Valkyrie_get();
  public final static native long Zerg_Cocoon_get();
  public final static native long Protoss_Corsair_get();
  public final static native long Protoss_Dark_Templar_get();
  public final static native long Zerg_Devourer_get();
  public final static native long Protoss_Dark_Archon_get();
  public final static native long Protoss_Probe_get();
  public final static native long Protoss_Zealot_get();
  public final static native long Protoss_Dragoon_get();
  public final static native long Protoss_High_Templar_get();
  public final static native long Protoss_Archon_get();
  public final static native long Protoss_Shuttle_get();
  public final static native long Protoss_Scout_get();
  public final static native long Protoss_Arbiter_get();
  public final static native long Protoss_Carrier_get();
  public final static native long Protoss_Interceptor_get();
  public final static native long Protoss_Reaver_get();
  public final static native long Protoss_Observer_get();
  public final static native long Protoss_Scarab_get();
  public final static native long Critter_Rhynadon_get();
  public final static native long Critter_Bengalaas_get();
  public final static native long Critter_Scantid_get();
  public final static native long Critter_Kakaru_get();
  public final static native long Critter_Ragnasaur_get();
  public final static native long Critter_Ursadon_get();
  public final static native long Zerg_Lurker_Egg_get();
  public final static native long Zerg_Lurker_get();
  public final static native long Spell_Disruption_Web_get();
  public final static native long Terran_Command_Center_get();
  public final static native long Terran_Comsat_Station_get();
  public final static native long Terran_Nuclear_Silo_get();
  public final static native long Terran_Supply_Depot_get();
  public final static native long Terran_Refinery_get();
  public final static native long Terran_Barracks_get();
  public final static native long Terran_Academy_get();
  public final static native long Terran_Factory_get();
  public final static native long Terran_Starport_get();
  public final static native long Terran_Control_Tower_get();
  public final static native long Terran_Science_Facility_get();
  public final static native long Terran_Covert_Ops_get();
  public final static native long Terran_Physics_Lab_get();
  public final static native long Terran_Machine_Shop_get();
  public final static native long Terran_Engineering_Bay_get();
  public final static native long Terran_Armory_get();
  public final static native long Terran_Missile_Turret_get();
  public final static native long Terran_Bunker_get();
  public final static native long Special_Crashed_Norad_II_get();
  public final static native long Special_Ion_Cannon_get();
  public final static native long Zerg_Infested_Command_Center_get();
  public final static native long Zerg_Hatchery_get();
  public final static native long Zerg_Lair_get();
  public final static native long Zerg_Hive_get();
  public final static native long Zerg_Nydus_Canal_get();
  public final static native long Zerg_Hydralisk_Den_get();
  public final static native long Zerg_Defiler_Mound_get();
  public final static native long Zerg_Greater_Spire_get();
  public final static native long Zerg_Queens_Nest_get();
  public final static native long Zerg_Evolution_Chamber_get();
  public final static native long Zerg_Ultralisk_Cavern_get();
  public final static native long Zerg_Spire_get();
  public final static native long Zerg_Spawning_Pool_get();
  public final static native long Zerg_Creep_Colony_get();
  public final static native long Zerg_Spore_Colony_get();
  public final static native long Zerg_Sunken_Colony_get();
  public final static native long Special_Overmind_With_Shell_get();
  public final static native long Special_Overmind_get();
  public final static native long Zerg_Extractor_get();
  public final static native long Special_Mature_Chrysalis_get();
  public final static native long Special_Cerebrate_get();
  public final static native long Special_Cerebrate_Daggoth_get();
  public final static native long Protoss_Nexus_get();
  public final static native long Protoss_Robotics_Facility_get();
  public final static native long Protoss_Pylon_get();
  public final static native long Protoss_Assimilator_get();
  public final static native long Protoss_Observatory_get();
  public final static native long Protoss_Gateway_get();
  public final static native long Protoss_Photon_Cannon_get();
  public final static native long Protoss_Citadel_of_Adun_get();
  public final static native long Protoss_Cybernetics_Core_get();
  public final static native long Protoss_Templar_Archives_get();
  public final static native long Protoss_Forge_get();
  public final static native long Protoss_Stargate_get();
  public final static native long Special_Stasis_Cell_Prison_get();
  public final static native long Protoss_Fleet_Beacon_get();
  public final static native long Protoss_Arbiter_Tribunal_get();
  public final static native long Protoss_Robotics_Support_Bay_get();
  public final static native long Protoss_Shield_Battery_get();
  public final static native long Special_Khaydarin_Crystal_Form_get();
  public final static native long Special_Protoss_Temple_get();
  public final static native long Special_XelNaga_Temple_get();
  public final static native long Resource_Mineral_Field_get();
  public final static native long Resource_Vespene_Geyser_get();
  public final static native long Special_Warp_Gate_get();
  public final static native long Special_Psi_Disrupter_get();
  public final static native long Special_Power_Generator_get();
  public final static native long Special_Overmind_Cocoon_get();
  public final static native long Spell_Dark_Swarm_get();
  public final static native long UnitTypeNone_get();
  public final static native long UnitTypeUnknown_get();
  public final static native long new_SWIG_UpgradeType__SWIG_0();
  public final static native long new_SWIG_UpgradeType__SWIG_1(int jarg1);
  public final static native long new_SWIG_UpgradeType__SWIG_2(long jarg1, SWIG_UpgradeType jarg1_);
  public final static native long SWIG_UpgradeType_opAssign(long jarg1, SWIG_UpgradeType jarg1_, long jarg2, SWIG_UpgradeType jarg2_);
  public final static native boolean SWIG_UpgradeType_opEquals(long jarg1, SWIG_UpgradeType jarg1_, long jarg2, SWIG_UpgradeType jarg2_);
  public final static native boolean SWIG_UpgradeType_opNotEquals(long jarg1, SWIG_UpgradeType jarg1_, long jarg2, SWIG_UpgradeType jarg2_);
  public final static native boolean SWIG_UpgradeType_opLessThan(long jarg1, SWIG_UpgradeType jarg1_, long jarg2, SWIG_UpgradeType jarg2_);
  public final static native int SWIG_UpgradeType_getID(long jarg1, SWIG_UpgradeType jarg1_);
  public final static native String SWIG_UpgradeType_getName(long jarg1, SWIG_UpgradeType jarg1_);
  public final static native long SWIG_UpgradeType_getRace(long jarg1, SWIG_UpgradeType jarg1_);
  public final static native int SWIG_UpgradeType_mineralPriceBase(long jarg1, SWIG_UpgradeType jarg1_);
  public final static native int SWIG_UpgradeType_mineralPriceFactor(long jarg1, SWIG_UpgradeType jarg1_);
  public final static native int SWIG_UpgradeType_gasPriceBase(long jarg1, SWIG_UpgradeType jarg1_);
  public final static native int SWIG_UpgradeType_gasPriceFactor(long jarg1, SWIG_UpgradeType jarg1_);
  public final static native int SWIG_UpgradeType_upgradeTimeBase(long jarg1, SWIG_UpgradeType jarg1_);
  public final static native int SWIG_UpgradeType_upgradeTimeFactor(long jarg1, SWIG_UpgradeType jarg1_);
  public final static native int SWIG_UpgradeType_maxRepeats(long jarg1, SWIG_UpgradeType jarg1_);
  public final static native long SWIG_UpgradeType_whatUpgrades(long jarg1, SWIG_UpgradeType jarg1_);
  public final static native long SWIG_UpgradeType_whatUses(long jarg1, SWIG_UpgradeType jarg1_);
  public final static native void delete_SWIG_UpgradeType(long jarg1);
  public final static native long getUpgradeType(long jarg1);
  public final static native long allUpgradeTypes();
  public final static native void initUpgradeTypes();
  public final static native long Terran_Infantry_Armor_get();
  public final static native long Terran_Vehicle_Plating_get();
  public final static native long Terran_Ship_Plating_get();
  public final static native long Zerg_Carapace_get();
  public final static native long Zerg_Flyer_Carapace_get();
  public final static native long Protoss_Armor_get();
  public final static native long Protoss_Plating_get();
  public final static native long Terran_Infantry_Weapons_get();
  public final static native long Terran_Vehicle_Weapons_get();
  public final static native long Terran_Ship_Weapons_get();
  public final static native long Zerg_Melee_Attacks_get();
  public final static native long Zerg_Missile_Attacks_get();
  public final static native long Zerg_Flyer_Attacks_get();
  public final static native long Protoss_Ground_Weapons_get();
  public final static native long Protoss_Air_Weapons_get();
  public final static native long Protoss_Plasma_Shields_get();
  public final static native long U_238_Shells_get();
  public final static native long Ion_Thrusters_get();
  public final static native long Titan_Reactor_get();
  public final static native long Ocular_Implants_get();
  public final static native long Moebius_Reactor_get();
  public final static native long Apollo_Reactor_get();
  public final static native long Colossus_Reactor_get();
  public final static native long Ventral_Sacs_get();
  public final static native long Antennae_get();
  public final static native long Pneumatized_Carapace_get();
  public final static native long Metabolic_Boost_get();
  public final static native long Adrenal_Glands_get();
  public final static native long Muscular_Augments_get();
  public final static native long Grooved_Spines_get();
  public final static native long Gamete_Meiosis_get();
  public final static native long Metasynaptic_Node_get();
  public final static native long Singularity_Charge_get();
  public final static native long Leg_Enhancements_get();
  public final static native long Scarab_Damage_get();
  public final static native long Reaver_Capacity_get();
  public final static native long Gravitic_Drive_get();
  public final static native long Sensor_Array_get();
  public final static native long Gravitic_Boosters_get();
  public final static native long Khaydarin_Amulet_get();
  public final static native long Apial_Sensors_get();
  public final static native long Gravitic_Thrusters_get();
  public final static native long Carrier_Capacity_get();
  public final static native long Khaydarin_Core_get();
  public final static native long Argus_Jewel_get();
  public final static native long Argus_Talisman_get();
  public final static native long Caduceus_Reactor_get();
  public final static native long Chitinous_Plating_get();
  public final static native long Anabolic_Synthesis_get();
  public final static native long Charon_Booster_get();
  public final static native long UpgradeTypeNone_get();
  public final static native long UpgradeTypeUnknown_get();
  public final static native long new_SWIG_WeaponType__SWIG_0();
  public final static native long new_SWIG_WeaponType__SWIG_1(int jarg1);
  public final static native long new_SWIG_WeaponType__SWIG_2(long jarg1, SWIG_WeaponType jarg1_);
  public final static native long SWIG_WeaponType_opAssign(long jarg1, SWIG_WeaponType jarg1_, long jarg2, SWIG_WeaponType jarg2_);
  public final static native boolean SWIG_WeaponType_opEquals(long jarg1, SWIG_WeaponType jarg1_, long jarg2, SWIG_WeaponType jarg2_);
  public final static native boolean SWIG_WeaponType_opNotEquals(long jarg1, SWIG_WeaponType jarg1_, long jarg2, SWIG_WeaponType jarg2_);
  public final static native boolean SWIG_WeaponType_opLessThan(long jarg1, SWIG_WeaponType jarg1_, long jarg2, SWIG_WeaponType jarg2_);
  public final static native int SWIG_WeaponType_getID(long jarg1, SWIG_WeaponType jarg1_);
  public final static native String SWIG_WeaponType_getName(long jarg1, SWIG_WeaponType jarg1_);
  public final static native long SWIG_WeaponType_getTech(long jarg1, SWIG_WeaponType jarg1_);
  public final static native long SWIG_WeaponType_whatUses(long jarg1, SWIG_WeaponType jarg1_);
  public final static native int SWIG_WeaponType_damageAmount(long jarg1, SWIG_WeaponType jarg1_);
  public final static native int SWIG_WeaponType_damageBonus(long jarg1, SWIG_WeaponType jarg1_);
  public final static native int SWIG_WeaponType_damageCooldown(long jarg1, SWIG_WeaponType jarg1_);
  public final static native int SWIG_WeaponType_damageFactor(long jarg1, SWIG_WeaponType jarg1_);
  public final static native long SWIG_WeaponType_upgradeType(long jarg1, SWIG_WeaponType jarg1_);
  public final static native long SWIG_WeaponType_damageType(long jarg1, SWIG_WeaponType jarg1_);
  public final static native long SWIG_WeaponType_explosionType(long jarg1, SWIG_WeaponType jarg1_);
  public final static native int SWIG_WeaponType_minRange(long jarg1, SWIG_WeaponType jarg1_);
  public final static native int SWIG_WeaponType_maxRange(long jarg1, SWIG_WeaponType jarg1_);
  public final static native int SWIG_WeaponType_innerSplashRadius(long jarg1, SWIG_WeaponType jarg1_);
  public final static native int SWIG_WeaponType_medianSplashRadius(long jarg1, SWIG_WeaponType jarg1_);
  public final static native int SWIG_WeaponType_outerSplashRadius(long jarg1, SWIG_WeaponType jarg1_);
  public final static native boolean SWIG_WeaponType_targetsAir(long jarg1, SWIG_WeaponType jarg1_);
  public final static native boolean SWIG_WeaponType_targetsGround(long jarg1, SWIG_WeaponType jarg1_);
  public final static native boolean SWIG_WeaponType_targetsMechanical(long jarg1, SWIG_WeaponType jarg1_);
  public final static native boolean SWIG_WeaponType_targetsOrganic(long jarg1, SWIG_WeaponType jarg1_);
  public final static native boolean SWIG_WeaponType_targetsNonBuilding(long jarg1, SWIG_WeaponType jarg1_);
  public final static native boolean SWIG_WeaponType_targetsNonRobotic(long jarg1, SWIG_WeaponType jarg1_);
  public final static native boolean SWIG_WeaponType_targetsTerrain(long jarg1, SWIG_WeaponType jarg1_);
  public final static native boolean SWIG_WeaponType_targetsOrgOrMech(long jarg1, SWIG_WeaponType jarg1_);
  public final static native boolean SWIG_WeaponType_targetsOwn(long jarg1, SWIG_WeaponType jarg1_);
  public final static native void delete_SWIG_WeaponType(long jarg1);
  public final static native long getWeaponType(long jarg1);
  public final static native long allWeaponTypes();
  public final static native long normalWeaponTypes();
  public final static native long specialWeaponTypes();
  public final static native void initWeaponTypes();
  public final static native long Gauss_Rifle_get();
  public final static native long C_10_Canister_Rifle_get();
  public final static native long WeaponTypeFragmentation_Grenade_get();
  public final static native long WeaponTypeSpider_Mines_get();
  public final static native long Twin_Autocannons_get();
  public final static native long Hellfire_Missile_Pack_get();
  public final static native long Arclite_Cannon_get();
  public final static native long Fusion_Cutter_get();
  public final static native long WeaponTypeGemini_Missiles_get();
  public final static native long WeaponTypeBurst_Lasers_get();
  public final static native long ATS_Laser_Battery_get();
  public final static native long ATA_Laser_Battery_get();
  public final static native long Flame_Thrower_get();
  public final static native long Arclite_Shock_Cannon_get();
  public final static native long WeaponTypeLongbolt_Missile_get();
  public final static native long Claws_get();
  public final static native long Needle_Spines_get();
  public final static native long Kaiser_Blades_get();
  public final static native long Toxic_Spores_get();
  public final static native long Spines_get();
  public final static native long WeaponTypeAcid_Spore_get();
  public final static native long WeaponTypeGlave_Wurm_get();
  public final static native long WeaponTypeSeeker_Spores_get();
  public final static native long Subterranean_Tentacle_get();
  public final static native long Suicide_Infested_Terran_get();
  public final static native long Suicide_Scourge_get();
  public final static native long Particle_Beam_get();
  public final static native long Psi_Blades_get();
  public final static native long WeaponTypePhase_Disruptor_get();
  public final static native long Psionic_Shockwave_get();
  public final static native long Dual_Photon_Blasters_get();
  public final static native long Anti_Matter_Missiles_get();
  public final static native long Phase_Disruptor_Cannon_get();
  public final static native long WeaponTypePulse_Cannon_get();
  public final static native long STS_Photon_Cannon_get();
  public final static native long STA_Photon_Cannon_get();
  public final static native long Scarab_get();
  public final static native long WeaponTypeNeutron_Flare_get();
  public final static native long WeaponTypeHalo_Rockets_get();
  public final static native long WeaponTypeCorrosive_Acid_get();
  public final static native long WeaponTypeSubterranean_Spines_get();
  public final static native long Warp_Blades_get();
  public final static native long WeaponTypeYamato_Gun_get();
  public final static native long WeaponTypeNuclear_Strike_get();
  public final static native long Lockdown_get();
  public final static native long EMP_Shockwave_get();
  public final static native long WeaponTypeIrradiate_get();
  public final static native long Parasite_get();
  public final static native long Spawn_Broodlings_get();
  public final static native long WeaponTypeEnsnare_get();
  public final static native long Dark_Swarm_get();
  public final static native long WeaponTypePlague_get();
  public final static native long WeaponTypeConsume_get();
  public final static native long Stasis_Field_get();
  public final static native long WeaponTypePsionic_Storm_get();
  public final static native long Disruption_Web_get();
  public final static native long WeaponTypeRestoration_get();
  public final static native long WeaponTypeMind_Control_get();
  public final static native long Feedback_get();
  public final static native long Optical_Flare_get();
  public final static native long Maelstrom_get();
  public final static native long WeaponTypeNone_get();
  public final static native long WeaponTypeUnknown_get();
  public final static native void readMap();
  public final static native void analyze();
  public final static native long getRegions();
  public final static native long getChokepoints();
  public final static native long getBaseLocations();
  public final static native long getStartLocations();
  public final static native long getUnwalkablePolygons();
  public final static native long getNearestUnwalkablePosition(long jarg1, SWIG_Position jarg1_);
  public final static native long getStartLocation(long jarg1, SWIG_Player jarg1_);
  public final static native long getNearestBaseLocation(long jarg1, SWIG_TilePosition jarg1_);
  public final static native long SWIG_BaseLocation_getPosition(long jarg1, SWIG_BaseLocation jarg1_);
  public final static native long SWIG_BaseLocation_getTilePosition(long jarg1, SWIG_BaseLocation jarg1_);
  public final static native long SWIG_BaseLocation_getRegion(long jarg1, SWIG_BaseLocation jarg1_);
  public final static native int SWIG_BaseLocation_minerals(long jarg1, SWIG_BaseLocation jarg1_);
  public final static native int SWIG_BaseLocation_gas(long jarg1, SWIG_BaseLocation jarg1_);
  public final static native long SWIG_BaseLocation_getMinerals(long jarg1, SWIG_BaseLocation jarg1_);
  public final static native long SWIG_BaseLocation_getStaticMinerals(long jarg1, SWIG_BaseLocation jarg1_);
  public final static native long SWIG_BaseLocation_getGeysers(long jarg1, SWIG_BaseLocation jarg1_);
  public final static native double SWIG_BaseLocation_getGroundDistance(long jarg1, SWIG_BaseLocation jarg1_, long jarg2, SWIG_BaseLocation jarg2_);
  public final static native double SWIG_BaseLocation_getAirDistance(long jarg1, SWIG_BaseLocation jarg1_, long jarg2, SWIG_BaseLocation jarg2_);
  public final static native boolean SWIG_BaseLocation_isIsland(long jarg1, SWIG_BaseLocation jarg1_);
  public final static native boolean SWIG_BaseLocation_isMineralOnly(long jarg1, SWIG_BaseLocation jarg1_);
  public final static native boolean SWIG_BaseLocation_isStartLocation(long jarg1, SWIG_BaseLocation jarg1_);
  public final static native void delete_SWIG_BaseLocation(long jarg1);
  public final static native long SWIG_Chokepoint_getRegions(long jarg1, SWIG_Chokepoint jarg1_);
  public final static native long SWIG_Chokepoint_getSides(long jarg1, SWIG_Chokepoint jarg1_);
  public final static native long SWIG_Chokepoint_getCenter(long jarg1, SWIG_Chokepoint jarg1_);
  public final static native double SWIG_Chokepoint_getWidth(long jarg1, SWIG_Chokepoint jarg1_);
  public final static native void delete_SWIG_Chokepoint(long jarg1);
  public final static native long new_SWIG_Polygon();
  public final static native double SWIG_Polygon_getArea(long jarg1, SWIG_Polygon jarg1_);
  public final static native double SWIG_Polygon_getPerimeter(long jarg1, SWIG_Polygon jarg1_);
  public final static native long SWIG_Polygon_getCenter(long jarg1, SWIG_Polygon jarg1_);
  public final static native boolean SWIG_Polygon_isInside(long jarg1, SWIG_Polygon jarg1_, long jarg2, SWIG_Position jarg2_);
  public final static native long SWIG_Polygon_getNearestPoint(long jarg1, SWIG_Polygon jarg1_, long jarg2, SWIG_Position jarg2_);
  public final static native void delete_SWIG_Polygon(long jarg1);
  public final static native long SWIG_Region_getPolygon(long jarg1, SWIG_Region jarg1_);
  public final static native long SWIG_Region_getCenter(long jarg1, SWIG_Region jarg1_);
  public final static native long SWIG_Region_getChokepoints(long jarg1, SWIG_Region jarg1_);
  public final static native long SWIG_Region_getBaseLocations(long jarg1, SWIG_Region jarg1_);
  public final static native void delete_SWIG_Region(long jarg1);
  public final static native long new_DamageTypeSet(long jarg1);
  public final static native void delete_DamageTypeSet(long jarg1);
  public final static native int DamageTypeSet_size(long jarg1, DamageTypeSet jarg1_);
  public final static native boolean DamageTypeSet_contains(long jarg1, DamageTypeSet jarg1_, long jarg2, SWIG_DamageType jarg2_);
  public final static native boolean DamageTypeSet_add(long jarg1, DamageTypeSet jarg1_, long jarg2, SWIG_DamageType jarg2_);
  public final static native void DamageTypeSet_clear(long jarg1, DamageTypeSet jarg1_);
  public final static native boolean DamageTypeSet_remove(long jarg1, DamageTypeSet jarg1_, long jarg2, SWIG_DamageType jarg2_);
  public final static native long new_DamageTypeSetIterator(long jarg1);
  public final static native boolean DamageTypeSetIterator_hasNext(long jarg1, DamageTypeSetIterator jarg1_);
  public final static native long DamageTypeSetIterator_next(long jarg1, DamageTypeSetIterator jarg1_);
  public final static native void delete_DamageTypeSetIterator(long jarg1);
  public final static native long new_ErrorSet(long jarg1);
  public final static native void delete_ErrorSet(long jarg1);
  public final static native int ErrorSet_size(long jarg1, ErrorSet jarg1_);
  public final static native boolean ErrorSet_contains(long jarg1, ErrorSet jarg1_, long jarg2, SWIG_Error jarg2_);
  public final static native boolean ErrorSet_add(long jarg1, ErrorSet jarg1_, long jarg2, SWIG_Error jarg2_);
  public final static native void ErrorSet_clear(long jarg1, ErrorSet jarg1_);
  public final static native boolean ErrorSet_remove(long jarg1, ErrorSet jarg1_, long jarg2, SWIG_Error jarg2_);
  public final static native long new_ErrorSetIterator(long jarg1);
  public final static native boolean ErrorSetIterator_hasNext(long jarg1, ErrorSetIterator jarg1_);
  public final static native long ErrorSetIterator_next(long jarg1, ErrorSetIterator jarg1_);
  public final static native void delete_ErrorSetIterator(long jarg1);
  public final static native long new_ExplosionTypeSet(long jarg1);
  public final static native void delete_ExplosionTypeSet(long jarg1);
  public final static native int ExplosionTypeSet_size(long jarg1, ExplosionTypeSet jarg1_);
  public final static native boolean ExplosionTypeSet_contains(long jarg1, ExplosionTypeSet jarg1_, long jarg2, SWIG_ExplosionType jarg2_);
  public final static native boolean ExplosionTypeSet_add(long jarg1, ExplosionTypeSet jarg1_, long jarg2, SWIG_ExplosionType jarg2_);
  public final static native void ExplosionTypeSet_clear(long jarg1, ExplosionTypeSet jarg1_);
  public final static native boolean ExplosionTypeSet_remove(long jarg1, ExplosionTypeSet jarg1_, long jarg2, SWIG_ExplosionType jarg2_);
  public final static native long new_ExplosionTypeSetIterator(long jarg1);
  public final static native boolean ExplosionTypeSetIterator_hasNext(long jarg1, ExplosionTypeSetIterator jarg1_);
  public final static native long ExplosionTypeSetIterator_next(long jarg1, ExplosionTypeSetIterator jarg1_);
  public final static native void delete_ExplosionTypeSetIterator(long jarg1);
  public final static native long new_ForceSet(long jarg1);
  public final static native void delete_ForceSet(long jarg1);
  public final static native int ForceSet_size(long jarg1, ForceSet jarg1_);
  public final static native boolean ForceSet_contains(long jarg1, ForceSet jarg1_, long jarg2, SWIG_Force jarg2_);
  public final static native boolean ForceSet_add(long jarg1, ForceSet jarg1_, long jarg2, SWIG_Force jarg2_);
  public final static native void ForceSet_clear(long jarg1, ForceSet jarg1_);
  public final static native boolean ForceSet_remove(long jarg1, ForceSet jarg1_, long jarg2, SWIG_Force jarg2_);
  public final static native long new_ForceSetIterator(long jarg1);
  public final static native boolean ForceSetIterator_hasNext(long jarg1, ForceSetIterator jarg1_);
  public final static native long ForceSetIterator_next(long jarg1, ForceSetIterator jarg1_);
  public final static native void delete_ForceSetIterator(long jarg1);
  public final static native long new_OrderSet(long jarg1);
  public final static native void delete_OrderSet(long jarg1);
  public final static native int OrderSet_size(long jarg1, OrderSet jarg1_);
  public final static native boolean OrderSet_contains(long jarg1, OrderSet jarg1_, long jarg2, SWIG_Order jarg2_);
  public final static native boolean OrderSet_add(long jarg1, OrderSet jarg1_, long jarg2, SWIG_Order jarg2_);
  public final static native void OrderSet_clear(long jarg1, OrderSet jarg1_);
  public final static native boolean OrderSet_remove(long jarg1, OrderSet jarg1_, long jarg2, SWIG_Order jarg2_);
  public final static native long new_OrderSetIterator(long jarg1);
  public final static native boolean OrderSetIterator_hasNext(long jarg1, OrderSetIterator jarg1_);
  public final static native long OrderSetIterator_next(long jarg1, OrderSetIterator jarg1_);
  public final static native void delete_OrderSetIterator(long jarg1);
  public final static native long new_PlayerSet(long jarg1);
  public final static native void delete_PlayerSet(long jarg1);
  public final static native int PlayerSet_size(long jarg1, PlayerSet jarg1_);
  public final static native boolean PlayerSet_contains(long jarg1, PlayerSet jarg1_, long jarg2, SWIG_Player jarg2_);
  public final static native boolean PlayerSet_add(long jarg1, PlayerSet jarg1_, long jarg2, SWIG_Player jarg2_);
  public final static native void PlayerSet_clear(long jarg1, PlayerSet jarg1_);
  public final static native boolean PlayerSet_remove(long jarg1, PlayerSet jarg1_, long jarg2, SWIG_Player jarg2_);
  public final static native long new_PlayerSetIterator(long jarg1);
  public final static native boolean PlayerSetIterator_hasNext(long jarg1, PlayerSetIterator jarg1_);
  public final static native long PlayerSetIterator_next(long jarg1, PlayerSetIterator jarg1_);
  public final static native void delete_PlayerSetIterator(long jarg1);
  public final static native long new_PlayerTypeSet(long jarg1);
  public final static native void delete_PlayerTypeSet(long jarg1);
  public final static native int PlayerTypeSet_size(long jarg1, PlayerTypeSet jarg1_);
  public final static native boolean PlayerTypeSet_contains(long jarg1, PlayerTypeSet jarg1_, long jarg2, SWIG_PlayerType jarg2_);
  public final static native boolean PlayerTypeSet_add(long jarg1, PlayerTypeSet jarg1_, long jarg2, SWIG_PlayerType jarg2_);
  public final static native void PlayerTypeSet_clear(long jarg1, PlayerTypeSet jarg1_);
  public final static native boolean PlayerTypeSet_remove(long jarg1, PlayerTypeSet jarg1_, long jarg2, SWIG_PlayerType jarg2_);
  public final static native long new_PlayerTypeSetIterator(long jarg1);
  public final static native boolean PlayerTypeSetIterator_hasNext(long jarg1, PlayerTypeSetIterator jarg1_);
  public final static native long PlayerTypeSetIterator_next(long jarg1, PlayerTypeSetIterator jarg1_);
  public final static native void delete_PlayerTypeSetIterator(long jarg1);
  public final static native long new_RaceSet(long jarg1);
  public final static native void delete_RaceSet(long jarg1);
  public final static native int RaceSet_size(long jarg1, RaceSet jarg1_);
  public final static native boolean RaceSet_contains(long jarg1, RaceSet jarg1_, long jarg2, SWIG_Race jarg2_);
  public final static native boolean RaceSet_add(long jarg1, RaceSet jarg1_, long jarg2, SWIG_Race jarg2_);
  public final static native void RaceSet_clear(long jarg1, RaceSet jarg1_);
  public final static native boolean RaceSet_remove(long jarg1, RaceSet jarg1_, long jarg2, SWIG_Race jarg2_);
  public final static native long new_RaceSetIterator(long jarg1);
  public final static native boolean RaceSetIterator_hasNext(long jarg1, RaceSetIterator jarg1_);
  public final static native long RaceSetIterator_next(long jarg1, RaceSetIterator jarg1_);
  public final static native void delete_RaceSetIterator(long jarg1);
  public final static native long new_TechTypeConstantSet(long jarg1);
  public final static native void delete_TechTypeConstantSet(long jarg1);
  public final static native int TechTypeConstantSet_size(long jarg1, TechTypeConstantSet jarg1_);
  public final static native boolean TechTypeConstantSet_contains(long jarg1, TechTypeConstantSet jarg1_, long jarg2, SWIG_TechType jarg2_);
  public final static native boolean TechTypeConstantSet_add(long jarg1, TechTypeConstantSet jarg1_, long jarg2, SWIG_TechType jarg2_);
  public final static native void TechTypeConstantSet_clear(long jarg1, TechTypeConstantSet jarg1_);
  public final static native boolean TechTypeConstantSet_remove(long jarg1, TechTypeConstantSet jarg1_, long jarg2, SWIG_TechType jarg2_);
  public final static native long new_TechTypeConstantSetIterator(long jarg1);
  public final static native boolean TechTypeConstantSetIterator_hasNext(long jarg1, TechTypeConstantSetIterator jarg1_);
  public final static native long TechTypeConstantSetIterator_next(long jarg1, TechTypeConstantSetIterator jarg1_);
  public final static native void delete_TechTypeConstantSetIterator(long jarg1);
  public final static native long new_TechTypeSet(long jarg1);
  public final static native void delete_TechTypeSet(long jarg1);
  public final static native int TechTypeSet_size(long jarg1, TechTypeSet jarg1_);
  public final static native boolean TechTypeSet_contains(long jarg1, TechTypeSet jarg1_, long jarg2, SWIG_TechType jarg2_);
  public final static native boolean TechTypeSet_add(long jarg1, TechTypeSet jarg1_, long jarg2, SWIG_TechType jarg2_);
  public final static native void TechTypeSet_clear(long jarg1, TechTypeSet jarg1_);
  public final static native boolean TechTypeSet_remove(long jarg1, TechTypeSet jarg1_, long jarg2, SWIG_TechType jarg2_);
  public final static native long new_TechTypeSetIterator(long jarg1);
  public final static native boolean TechTypeSetIterator_hasNext(long jarg1, TechTypeSetIterator jarg1_);
  public final static native long TechTypeSetIterator_next(long jarg1, TechTypeSetIterator jarg1_);
  public final static native void delete_TechTypeSetIterator(long jarg1);
  public final static native void UnitList__list_set(long jarg1, UnitList jarg1_, long jarg2);
  public final static native long UnitList__list_get(long jarg1, UnitList jarg1_);
  public final static native long new_UnitList(long jarg1);
  public final static native void delete_UnitList(long jarg1);
  public final static native int UnitList_size(long jarg1, UnitList jarg1_);
  public final static native boolean UnitList_contains(long jarg1, UnitList jarg1_, long jarg2, SWIG_Unit jarg2_);
  public final static native boolean UnitList_add(long jarg1, UnitList jarg1_, long jarg2, SWIG_Unit jarg2_);
  public final static native void UnitList_clear(long jarg1, UnitList jarg1_);
  public final static native boolean UnitList_remove(long jarg1, UnitList jarg1_, long jarg2, SWIG_Unit jarg2_);
  public final static native long new_UnitListIterator(long jarg1);
  public final static native boolean UnitListIterator_hasNext(long jarg1, UnitListIterator jarg1_);
  public final static native long UnitListIterator_next(long jarg1, UnitListIterator jarg1_);
  public final static native void delete_UnitListIterator(long jarg1);
  public final static native long new_UnitSet(long jarg1);
  public final static native void delete_UnitSet(long jarg1);
  public final static native int UnitSet_size(long jarg1, UnitSet jarg1_);
  public final static native boolean UnitSet_contains(long jarg1, UnitSet jarg1_, long jarg2, SWIG_Unit jarg2_);
  public final static native boolean UnitSet_add(long jarg1, UnitSet jarg1_, long jarg2, SWIG_Unit jarg2_);
  public final static native void UnitSet_clear(long jarg1, UnitSet jarg1_);
  public final static native boolean UnitSet_remove(long jarg1, UnitSet jarg1_, long jarg2, SWIG_Unit jarg2_);
  public final static native long new_UnitSetIterator(long jarg1);
  public final static native boolean UnitSetIterator_hasNext(long jarg1, UnitSetIterator jarg1_);
  public final static native long UnitSetIterator_next(long jarg1, UnitSetIterator jarg1_);
  public final static native void delete_UnitSetIterator(long jarg1);
  public final static native long new_UnitSizeTypeSet(long jarg1);
  public final static native void delete_UnitSizeTypeSet(long jarg1);
  public final static native int UnitSizeTypeSet_size(long jarg1, UnitSizeTypeSet jarg1_);
  public final static native boolean UnitSizeTypeSet_contains(long jarg1, UnitSizeTypeSet jarg1_, long jarg2, SWIG_UnitSizeType jarg2_);
  public final static native boolean UnitSizeTypeSet_add(long jarg1, UnitSizeTypeSet jarg1_, long jarg2, SWIG_UnitSizeType jarg2_);
  public final static native void UnitSizeTypeSet_clear(long jarg1, UnitSizeTypeSet jarg1_);
  public final static native boolean UnitSizeTypeSet_remove(long jarg1, UnitSizeTypeSet jarg1_, long jarg2, SWIG_UnitSizeType jarg2_);
  public final static native long new_UnitSizeTypeSetIterator(long jarg1);
  public final static native boolean UnitSizeTypeSetIterator_hasNext(long jarg1, UnitSizeTypeSetIterator jarg1_);
  public final static native long UnitSizeTypeSetIterator_next(long jarg1, UnitSizeTypeSetIterator jarg1_);
  public final static native void delete_UnitSizeTypeSetIterator(long jarg1);
  public final static native long new_UnitTypeConstantSet(long jarg1);
  public final static native void delete_UnitTypeConstantSet(long jarg1);
  public final static native int UnitTypeConstantSet_size(long jarg1, UnitTypeConstantSet jarg1_);
  public final static native boolean UnitTypeConstantSet_contains(long jarg1, UnitTypeConstantSet jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native boolean UnitTypeConstantSet_add(long jarg1, UnitTypeConstantSet jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native void UnitTypeConstantSet_clear(long jarg1, UnitTypeConstantSet jarg1_);
  public final static native boolean UnitTypeConstantSet_remove(long jarg1, UnitTypeConstantSet jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native long new_UnitTypeConstantSetIterator(long jarg1);
  public final static native boolean UnitTypeConstantSetIterator_hasNext(long jarg1, UnitTypeConstantSetIterator jarg1_);
  public final static native long UnitTypeConstantSetIterator_next(long jarg1, UnitTypeConstantSetIterator jarg1_);
  public final static native void delete_UnitTypeConstantSetIterator(long jarg1);
  public final static native long new_UnitTypeSet(long jarg1);
  public final static native void delete_UnitTypeSet(long jarg1);
  public final static native int UnitTypeSet_size(long jarg1, UnitTypeSet jarg1_);
  public final static native boolean UnitTypeSet_contains(long jarg1, UnitTypeSet jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native boolean UnitTypeSet_add(long jarg1, UnitTypeSet jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native void UnitTypeSet_clear(long jarg1, UnitTypeSet jarg1_);
  public final static native boolean UnitTypeSet_remove(long jarg1, UnitTypeSet jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native long new_UnitTypeSetIterator(long jarg1);
  public final static native boolean UnitTypeSetIterator_hasNext(long jarg1, UnitTypeSetIterator jarg1_);
  public final static native long UnitTypeSetIterator_next(long jarg1, UnitTypeSetIterator jarg1_);
  public final static native void delete_UnitTypeSetIterator(long jarg1);
  public final static native long new_UnitTypeWhatBuildsPair__SWIG_0();
  public final static native long new_UnitTypeWhatBuildsPair__SWIG_1(long jarg1, SWIG_UnitType jarg1_, int jarg2);
  public final static native long new_UnitTypeWhatBuildsPair__SWIG_2(long jarg1, UnitTypeWhatBuildsPair jarg1_);
  public final static native void UnitTypeWhatBuildsPair_first_set(long jarg1, UnitTypeWhatBuildsPair jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native long UnitTypeWhatBuildsPair_first_get(long jarg1, UnitTypeWhatBuildsPair jarg1_);
  public final static native void UnitTypeWhatBuildsPair_second_set(long jarg1, UnitTypeWhatBuildsPair jarg1_, int jarg2);
  public final static native int UnitTypeWhatBuildsPair_second_get(long jarg1, UnitTypeWhatBuildsPair jarg1_);
  public final static native void delete_UnitTypeWhatBuildsPair(long jarg1);
  public final static native long new_UnitTypeMap(long jarg1);
  public final static native void delete_UnitTypeMap(long jarg1);
  public final static native int UnitTypeMap_size(long jarg1, UnitTypeMap jarg1_);
  public final static native boolean UnitTypeMap_add(long jarg1, UnitTypeMap jarg1_, long jarg2, int jarg3);
  public final static native void UnitTypeMap_clear(long jarg1, UnitTypeMap jarg1_);
  public final static native boolean UnitTypeMap_remove(long jarg1, UnitTypeMap jarg1_, long jarg2);
  public final static native long new_UnitTypeMapIterator(long jarg1);
  public final static native boolean UnitTypeMapIterator_hasNext(long jarg1, UnitTypeMapIterator jarg1_);
  public final static native void UnitTypeMapIterator_next(long jarg1, UnitTypeMapIterator jarg1_);
  public final static native long UnitTypeMapIterator_getKey(long jarg1, UnitTypeMapIterator jarg1_);
  public final static native int UnitTypeMapIterator_getValue(long jarg1, UnitTypeMapIterator jarg1_);
  public final static native void delete_UnitTypeMapIterator(long jarg1);
  public final static native void UnitTypeList__list_set(long jarg1, UnitTypeList jarg1_, long jarg2);
  public final static native long UnitTypeList__list_get(long jarg1, UnitTypeList jarg1_);
  public final static native long new_UnitTypeList(long jarg1);
  public final static native void delete_UnitTypeList(long jarg1);
  public final static native int UnitTypeList_size(long jarg1, UnitTypeList jarg1_);
  public final static native boolean UnitTypeList_contains(long jarg1, UnitTypeList jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native boolean UnitTypeList_add(long jarg1, UnitTypeList jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native void UnitTypeList_clear(long jarg1, UnitTypeList jarg1_);
  public final static native boolean UnitTypeList_remove(long jarg1, UnitTypeList jarg1_, long jarg2, SWIG_UnitType jarg2_);
  public final static native long new_UnitTypeListIterator(long jarg1);
  public final static native boolean UnitTypeListIterator_hasNext(long jarg1, UnitTypeListIterator jarg1_);
  public final static native long UnitTypeListIterator_next(long jarg1, UnitTypeListIterator jarg1_);
  public final static native void delete_UnitTypeListIterator(long jarg1);
  public final static native long new_UpgradeTypeConstantSet(long jarg1);
  public final static native void delete_UpgradeTypeConstantSet(long jarg1);
  public final static native int UpgradeTypeConstantSet_size(long jarg1, UpgradeTypeConstantSet jarg1_);
  public final static native boolean UpgradeTypeConstantSet_contains(long jarg1, UpgradeTypeConstantSet jarg1_, long jarg2, SWIG_UpgradeType jarg2_);
  public final static native boolean UpgradeTypeConstantSet_add(long jarg1, UpgradeTypeConstantSet jarg1_, long jarg2, SWIG_UpgradeType jarg2_);
  public final static native void UpgradeTypeConstantSet_clear(long jarg1, UpgradeTypeConstantSet jarg1_);
  public final static native boolean UpgradeTypeConstantSet_remove(long jarg1, UpgradeTypeConstantSet jarg1_, long jarg2, SWIG_UpgradeType jarg2_);
  public final static native long new_UpgradeTypeConstantSetIterator(long jarg1);
  public final static native boolean UpgradeTypeConstantSetIterator_hasNext(long jarg1, UpgradeTypeConstantSetIterator jarg1_);
  public final static native long UpgradeTypeConstantSetIterator_next(long jarg1, UpgradeTypeConstantSetIterator jarg1_);
  public final static native void delete_UpgradeTypeConstantSetIterator(long jarg1);
  public final static native long new_UpgradeTypeSet(long jarg1);
  public final static native void delete_UpgradeTypeSet(long jarg1);
  public final static native int UpgradeTypeSet_size(long jarg1, UpgradeTypeSet jarg1_);
  public final static native boolean UpgradeTypeSet_contains(long jarg1, UpgradeTypeSet jarg1_, long jarg2, SWIG_UpgradeType jarg2_);
  public final static native boolean UpgradeTypeSet_add(long jarg1, UpgradeTypeSet jarg1_, long jarg2, SWIG_UpgradeType jarg2_);
  public final static native void UpgradeTypeSet_clear(long jarg1, UpgradeTypeSet jarg1_);
  public final static native boolean UpgradeTypeSet_remove(long jarg1, UpgradeTypeSet jarg1_, long jarg2, SWIG_UpgradeType jarg2_);
  public final static native long new_UpgradeTypeSetIterator(long jarg1);
  public final static native boolean UpgradeTypeSetIterator_hasNext(long jarg1, UpgradeTypeSetIterator jarg1_);
  public final static native long UpgradeTypeSetIterator_next(long jarg1, UpgradeTypeSetIterator jarg1_);
  public final static native void delete_UpgradeTypeSetIterator(long jarg1);
  public final static native long new_WeaponTypeSet(long jarg1);
  public final static native void delete_WeaponTypeSet(long jarg1);
  public final static native int WeaponTypeSet_size(long jarg1, WeaponTypeSet jarg1_);
  public final static native boolean WeaponTypeSet_contains(long jarg1, WeaponTypeSet jarg1_, long jarg2, SWIG_WeaponType jarg2_);
  public final static native boolean WeaponTypeSet_add(long jarg1, WeaponTypeSet jarg1_, long jarg2, SWIG_WeaponType jarg2_);
  public final static native void WeaponTypeSet_clear(long jarg1, WeaponTypeSet jarg1_);
  public final static native boolean WeaponTypeSet_remove(long jarg1, WeaponTypeSet jarg1_, long jarg2, SWIG_WeaponType jarg2_);
  public final static native long new_WeaponTypeSetIterator(long jarg1);
  public final static native boolean WeaponTypeSetIterator_hasNext(long jarg1, WeaponTypeSetIterator jarg1_);
  public final static native long WeaponTypeSetIterator_next(long jarg1, WeaponTypeSetIterator jarg1_);
  public final static native void delete_WeaponTypeSetIterator(long jarg1);
  public final static native long new_TilePositionSet(long jarg1);
  public final static native void delete_TilePositionSet(long jarg1);
  public final static native int TilePositionSet_size(long jarg1, TilePositionSet jarg1_);
  public final static native boolean TilePositionSet_contains(long jarg1, TilePositionSet jarg1_, long jarg2, SWIG_TilePosition jarg2_);
  public final static native boolean TilePositionSet_add(long jarg1, TilePositionSet jarg1_, long jarg2, SWIG_TilePosition jarg2_);
  public final static native void TilePositionSet_clear(long jarg1, TilePositionSet jarg1_);
  public final static native boolean TilePositionSet_remove(long jarg1, TilePositionSet jarg1_, long jarg2, SWIG_TilePosition jarg2_);
  public final static native long new_TilePositionSetIterator(long jarg1);
  public final static native boolean TilePositionSetIterator_hasNext(long jarg1, TilePositionSetIterator jarg1_);
  public final static native long TilePositionSetIterator_next(long jarg1, TilePositionSetIterator jarg1_);
  public final static native void delete_TilePositionSetIterator(long jarg1);
  public final static native long new_RegionSet(long jarg1);
  public final static native void delete_RegionSet(long jarg1);
  public final static native int RegionSet_size(long jarg1, RegionSet jarg1_);
  public final static native boolean RegionSet_contains(long jarg1, RegionSet jarg1_, long jarg2, SWIG_Region jarg2_);
  public final static native boolean RegionSet_add(long jarg1, RegionSet jarg1_, long jarg2, SWIG_Region jarg2_);
  public final static native void RegionSet_clear(long jarg1, RegionSet jarg1_);
  public final static native boolean RegionSet_remove(long jarg1, RegionSet jarg1_, long jarg2, SWIG_Region jarg2_);
  public final static native long new_RegionSetIterator(long jarg1);
  public final static native boolean RegionSetIterator_hasNext(long jarg1, RegionSetIterator jarg1_);
  public final static native long RegionSetIterator_next(long jarg1, RegionSetIterator jarg1_);
  public final static native void delete_RegionSetIterator(long jarg1);
  public final static native long new_RegionSpacelessSet(long jarg1);
  public final static native void delete_RegionSpacelessSet(long jarg1);
  public final static native int RegionSpacelessSet_size(long jarg1, RegionSpacelessSet jarg1_);
  public final static native boolean RegionSpacelessSet_contains(long jarg1, RegionSpacelessSet jarg1_, long jarg2);
  public final static native boolean RegionSpacelessSet_add(long jarg1, RegionSpacelessSet jarg1_, long jarg2);
  public final static native void RegionSpacelessSet_clear(long jarg1, RegionSpacelessSet jarg1_);
  public final static native boolean RegionSpacelessSet_remove(long jarg1, RegionSpacelessSet jarg1_, long jarg2);
  public final static native long new_RegionSpacelessSetIterator(long jarg1);
  public final static native boolean RegionSpacelessSetIterator_hasNext(long jarg1, RegionSpacelessSetIterator jarg1_);
  public final static native long RegionSpacelessSetIterator_next(long jarg1, RegionSpacelessSetIterator jarg1_);
  public final static native void delete_RegionSpacelessSetIterator(long jarg1);
  public final static native long new_ChokepointSet(long jarg1);
  public final static native void delete_ChokepointSet(long jarg1);
  public final static native int ChokepointSet_size(long jarg1, ChokepointSet jarg1_);
  public final static native boolean ChokepointSet_contains(long jarg1, ChokepointSet jarg1_, long jarg2, SWIG_Chokepoint jarg2_);
  public final static native boolean ChokepointSet_add(long jarg1, ChokepointSet jarg1_, long jarg2, SWIG_Chokepoint jarg2_);
  public final static native void ChokepointSet_clear(long jarg1, ChokepointSet jarg1_);
  public final static native boolean ChokepointSet_remove(long jarg1, ChokepointSet jarg1_, long jarg2, SWIG_Chokepoint jarg2_);
  public final static native long new_ChokepointSetIterator(long jarg1);
  public final static native boolean ChokepointSetIterator_hasNext(long jarg1, ChokepointSetIterator jarg1_);
  public final static native long ChokepointSetIterator_next(long jarg1, ChokepointSetIterator jarg1_);
  public final static native void delete_ChokepointSetIterator(long jarg1);
  public final static native long new_ChokepointSpacelessSet(long jarg1);
  public final static native void delete_ChokepointSpacelessSet(long jarg1);
  public final static native int ChokepointSpacelessSet_size(long jarg1, ChokepointSpacelessSet jarg1_);
  public final static native boolean ChokepointSpacelessSet_contains(long jarg1, ChokepointSpacelessSet jarg1_, long jarg2);
  public final static native boolean ChokepointSpacelessSet_add(long jarg1, ChokepointSpacelessSet jarg1_, long jarg2);
  public final static native void ChokepointSpacelessSet_clear(long jarg1, ChokepointSpacelessSet jarg1_);
  public final static native boolean ChokepointSpacelessSet_remove(long jarg1, ChokepointSpacelessSet jarg1_, long jarg2);
  public final static native long new_ChokepointSpacelessSetIterator(long jarg1);
  public final static native boolean ChokepointSpacelessSetIterator_hasNext(long jarg1, ChokepointSpacelessSetIterator jarg1_);
  public final static native long ChokepointSpacelessSetIterator_next(long jarg1, ChokepointSpacelessSetIterator jarg1_);
  public final static native void delete_ChokepointSpacelessSetIterator(long jarg1);
  public final static native long new_ChokepointGetRegionsPair__SWIG_0();
  public final static native long new_ChokepointGetRegionsPair__SWIG_1(long jarg1, SWIG_Region jarg1_, long jarg2, SWIG_Region jarg2_);
  public final static native long new_ChokepointGetRegionsPair__SWIG_2(long jarg1, ChokepointGetRegionsPair jarg1_);
  public final static native void ChokepointGetRegionsPair_first_set(long jarg1, ChokepointGetRegionsPair jarg1_, long jarg2, SWIG_Region jarg2_);
  public final static native long ChokepointGetRegionsPair_first_get(long jarg1, ChokepointGetRegionsPair jarg1_);
  public final static native void ChokepointGetRegionsPair_second_set(long jarg1, ChokepointGetRegionsPair jarg1_, long jarg2, SWIG_Region jarg2_);
  public final static native long ChokepointGetRegionsPair_second_get(long jarg1, ChokepointGetRegionsPair jarg1_);
  public final static native void delete_ChokepointGetRegionsPair(long jarg1);
  public final static native long new_ChokepointGetSidesPair__SWIG_0();
  public final static native long new_ChokepointGetSidesPair__SWIG_1(long jarg1, SWIG_Position jarg1_, long jarg2, SWIG_Position jarg2_);
  public final static native long new_ChokepointGetSidesPair__SWIG_2(long jarg1, ChokepointGetSidesPair jarg1_);
  public final static native void ChokepointGetSidesPair_first_set(long jarg1, ChokepointGetSidesPair jarg1_, long jarg2, SWIG_Position jarg2_);
  public final static native long ChokepointGetSidesPair_first_get(long jarg1, ChokepointGetSidesPair jarg1_);
  public final static native void ChokepointGetSidesPair_second_set(long jarg1, ChokepointGetSidesPair jarg1_, long jarg2, SWIG_Position jarg2_);
  public final static native long ChokepointGetSidesPair_second_get(long jarg1, ChokepointGetSidesPair jarg1_);
  public final static native void delete_ChokepointGetSidesPair(long jarg1);
  public final static native long new_BaseLocationSet(long jarg1);
  public final static native void delete_BaseLocationSet(long jarg1);
  public final static native int BaseLocationSet_size(long jarg1, BaseLocationSet jarg1_);
  public final static native boolean BaseLocationSet_contains(long jarg1, BaseLocationSet jarg1_, long jarg2, SWIG_BaseLocation jarg2_);
  public final static native boolean BaseLocationSet_add(long jarg1, BaseLocationSet jarg1_, long jarg2, SWIG_BaseLocation jarg2_);
  public final static native void BaseLocationSet_clear(long jarg1, BaseLocationSet jarg1_);
  public final static native boolean BaseLocationSet_remove(long jarg1, BaseLocationSet jarg1_, long jarg2, SWIG_BaseLocation jarg2_);
  public final static native long new_BaseLocationSetIterator(long jarg1);
  public final static native boolean BaseLocationSetIterator_hasNext(long jarg1, BaseLocationSetIterator jarg1_);
  public final static native long BaseLocationSetIterator_next(long jarg1, BaseLocationSetIterator jarg1_);
  public final static native void delete_BaseLocationSetIterator(long jarg1);
  public final static native long new_BaseLocationSpacelessSet(long jarg1);
  public final static native void delete_BaseLocationSpacelessSet(long jarg1);
  public final static native int BaseLocationSpacelessSet_size(long jarg1, BaseLocationSpacelessSet jarg1_);
  public final static native boolean BaseLocationSpacelessSet_contains(long jarg1, BaseLocationSpacelessSet jarg1_, long jarg2);
  public final static native boolean BaseLocationSpacelessSet_add(long jarg1, BaseLocationSpacelessSet jarg1_, long jarg2);
  public final static native void BaseLocationSpacelessSet_clear(long jarg1, BaseLocationSpacelessSet jarg1_);
  public final static native boolean BaseLocationSpacelessSet_remove(long jarg1, BaseLocationSpacelessSet jarg1_, long jarg2);
  public final static native long new_BaseLocationSpacelessSetIterator(long jarg1);
  public final static native boolean BaseLocationSpacelessSetIterator_hasNext(long jarg1, BaseLocationSpacelessSetIterator jarg1_);
  public final static native long BaseLocationSpacelessSetIterator_next(long jarg1, BaseLocationSpacelessSetIterator jarg1_);
  public final static native void delete_BaseLocationSpacelessSetIterator(long jarg1);
  public final static native long new_PolygonSet(long jarg1);
  public final static native void delete_PolygonSet(long jarg1);
  public final static native int PolygonSet_size(long jarg1, PolygonSet jarg1_);
  public final static native boolean PolygonSet_contains(long jarg1, PolygonSet jarg1_, long jarg2, SWIG_Polygon jarg2_);
  public final static native boolean PolygonSet_add(long jarg1, PolygonSet jarg1_, long jarg2, SWIG_Polygon jarg2_);
  public final static native void PolygonSet_clear(long jarg1, PolygonSet jarg1_);
  public final static native boolean PolygonSet_remove(long jarg1, PolygonSet jarg1_, long jarg2, SWIG_Polygon jarg2_);
  public final static native long new_PolygonSetIterator(long jarg1);
  public final static native boolean PolygonSetIterator_hasNext(long jarg1, PolygonSetIterator jarg1_);
  public final static native long PolygonSetIterator_next(long jarg1, PolygonSetIterator jarg1_);
  public final static native void delete_PolygonSetIterator(long jarg1);
  public final static native long new_PolygonSpacelessSet(long jarg1);
  public final static native void delete_PolygonSpacelessSet(long jarg1);
  public final static native int PolygonSpacelessSet_size(long jarg1, PolygonSpacelessSet jarg1_);
  public final static native boolean PolygonSpacelessSet_contains(long jarg1, PolygonSpacelessSet jarg1_, long jarg2);
  public final static native boolean PolygonSpacelessSet_add(long jarg1, PolygonSpacelessSet jarg1_, long jarg2);
  public final static native void PolygonSpacelessSet_clear(long jarg1, PolygonSpacelessSet jarg1_);
  public final static native boolean PolygonSpacelessSet_remove(long jarg1, PolygonSpacelessSet jarg1_, long jarg2);
  public final static native long new_PolygonSpacelessSetIterator(long jarg1);
  public final static native boolean PolygonSpacelessSetIterator_hasNext(long jarg1, PolygonSpacelessSetIterator jarg1_);
  public final static native long PolygonSpacelessSetIterator_next(long jarg1, PolygonSpacelessSetIterator jarg1_);
  public final static native void delete_PolygonSpacelessSetIterator(long jarg1);
  public final static native long new_PositionVector(long jarg1);
  public final static native void delete_PositionVector(long jarg1);
  public final static native int PositionVector_size(long jarg1, PositionVector jarg1_);
  public final static native void PositionVector_add(long jarg1, PositionVector jarg1_, int jarg2, long jarg3, SWIG_Position jarg3_);
  public final static native void PositionVector_clear(long jarg1, PositionVector jarg1_);
  public final static native long PositionVector_set(long jarg1, PositionVector jarg1_, int jarg2, long jarg3, SWIG_Position jarg3_);
  public final static native long PositionVector_remove(long jarg1, PositionVector jarg1_, int jarg2);
  public final static native long PositionVector_get(long jarg1, PositionVector jarg1_, int jarg2);
}
